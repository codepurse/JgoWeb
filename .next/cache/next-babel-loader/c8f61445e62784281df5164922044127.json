{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* global google */\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport Head from 'next/head';\n\nvar MapContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(MapContainer, _React$Component);\n\n  var _super = _createSuper(MapContainer);\n\n  function MapContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _super.call(this, props);\n    _this.handleMapReady = _this.handleMapReady.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"handleMapReady\",\n    value: function handleMapReady(mapProps, map) {\n      this.calculateAndDisplayRoute(map);\n    }\n  }, {\n    key: \"calculateAndDisplayRoute\",\n    value: function calculateAndDisplayRoute(map) {\n      var directionsService = new google.maps.DirectionsService();\n      var directionsDisplay = new google.maps.DirectionsRenderer();\n      directionsDisplay.setMap(map);\n      var waypoints = this.props.data.map(function (item) {\n        return {\n          location: {\n            lat: item.lat,\n            lng: item.lng\n          },\n          stopover: true\n        };\n      });\n      var origin = waypoints.shift().location;\n      var destination = waypoints.pop().location;\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        waypoints: waypoints,\n        travelMode: 'DRIVING'\n      }, function (response, status) {\n        if (status === 'OK') {\n          directionsDisplay.setDirections(response);\n        } else {\n          window.alert('Directions request failed due to ' + status);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"map-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, __jsx(Map, {\n        google: this.props.google,\n        className: \"map\",\n        zoom: this.props.zoom,\n        initialCenter: this.props.center,\n        onReady: this.handleMapReady,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MapContainer;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\",\n  libraries: []\n})(MapContainer);","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","Map","GoogleApiWrapper","Head","MapContainer","props","handleMapReady","bind","mapProps","map","calculateAndDisplayRoute","directionsService","google","maps","DirectionsService","directionsDisplay","DirectionsRenderer","setMap","waypoints","data","item","location","lat","lng","stopover","origin","shift","destination","pop","route","travelMode","response","status","setDirections","window","alert","zoom","center","apiKey","libraries"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IACMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AAFiB;AAGlB;;;;mCAEcC,Q,EAAUC,G,EAAK;AAC5B,WAAKC,wBAAL,CAA8BD,GAA9B;AACD;;;6CAEwBA,G,EAAK;AAC5B,UAAME,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA1B;AACA,UAAMC,iBAAiB,GAAG,IAAIH,MAAM,CAACC,IAAP,CAAYG,kBAAhB,EAA1B;AACAD,MAAAA,iBAAiB,CAACE,MAAlB,CAAyBR,GAAzB;AAGA,UAAMS,SAAS,GAAG,KAAKb,KAAL,CAAWc,IAAX,CAAgBV,GAAhB,CAAoB,UAAAW,IAAI,EAAG;AAC3C,eAAM;AACJC,UAAAA,QAAQ,EAAE;AAACC,YAAAA,GAAG,EAAEF,IAAI,CAACE,GAAX;AAAgBC,YAAAA,GAAG,EAACH,IAAI,CAACG;AAAzB,WADN;AAEJC,UAAAA,QAAQ,EAAE;AAFN,SAAN;AAID,OALiB,CAAlB;AAMA,UAAMC,MAAM,GAAGP,SAAS,CAACQ,KAAV,GAAkBL,QAAjC;AACA,UAAMM,WAAW,GAAGT,SAAS,CAACU,GAAV,GAAgBP,QAApC;AAEAV,MAAAA,iBAAiB,CAACkB,KAAlB,CAAwB;AACtBJ,QAAAA,MAAM,EAAEA,MADc;AAEtBE,QAAAA,WAAW,EAAEA,WAFS;AAGtBT,QAAAA,SAAS,EAAEA,SAHW;AAItBY,QAAAA,UAAU,EAAE;AAJU,OAAxB,EAKG,UAACC,QAAD,EAAWC,MAAX,EAAsB;AACvB,YAAIA,MAAM,KAAK,IAAf,EAAqB;AACnBjB,UAAAA,iBAAiB,CAACkB,aAAlB,CAAgCF,QAAhC;AACD,SAFD,MAEO;AACLG,UAAAA,MAAM,CAACC,KAAP,CAAa,sCAAsCH,MAAnD;AACD;AACF,OAXD;AAYD;;;6BAEQ;AACP,aAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AACE,QAAA,MAAM,EAAE,KAAK3B,KAAL,CAAWO,MADrB;AAEE,QAAA,SAAS,EAAE,KAFb;AAGE,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAW+B,IAHnB;AAIE,QAAA,aAAa,EAAE,KAAK/B,KAAL,CAAWgC,MAJ5B;AAKE,QAAA,OAAO,EAAE,KAAK/B,cALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF;AAaD;;;;EArDwBP,KAAK,CAACC,S;;AAwDjC,eAAeE,gBAAgB,CAAC;AAC9BoC,EAAAA,MAAM,EAAE,yCADsB;AAE9BC,EAAAA,SAAS,EAAE;AAFmB,CAAD,CAAhB,CAGZnC,YAHY,CAAf","sourcesContent":["/* global google */\r\nimport React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\r\nimport Head from 'next/head';\r\nclass MapContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMapReady = this.handleMapReady.bind(this);\r\n  }\r\n\r\n  handleMapReady(mapProps, map) {\r\n    this.calculateAndDisplayRoute(map);\r\n  }\r\n\r\n  calculateAndDisplayRoute(map) {\r\n    const directionsService = new google.maps.DirectionsService();\r\n    const directionsDisplay = new google.maps.DirectionsRenderer();\r\n    directionsDisplay.setMap(map);\r\n     \r\n    \r\n    const waypoints = this.props.data.map(item =>{\r\n      return{\r\n        location: {lat: item.lat, lng:item.lng},\r\n        stopover: true\r\n      }\r\n    })\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n    directionsService.route({\r\n      origin: origin,\r\n      destination: destination,\r\n      waypoints: waypoints,\r\n      travelMode: 'DRIVING'\r\n    }, (response, status) => {\r\n      if (status === 'OK') {\r\n        directionsDisplay.setDirections(response);\r\n      } else {\r\n        window.alert('Directions request failed due to ' + status);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"map-container\">\r\n        <Map\r\n          google={this.props.google}\r\n          className={\"map\"}\r\n          zoom={this.props.zoom}\r\n          initialCenter={this.props.center}\r\n          onReady={this.handleMapReady}\r\n        />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\",\r\n  libraries: []\r\n})(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}