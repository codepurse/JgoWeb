{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*global google*/\nimport React, { Component } from \"react\";\nimport { Polyline } from 'react-google-maps';\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\n\nvar Map = /*#__PURE__*/function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      directions: null\n    });\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var directionsService = new google.maps.DirectionsService();\n      var origin = {\n        lat: localStorage.getItem('pickofflat'),\n        lng: localStorage.getItem('pickofflng')\n      };\n      var destination = {\n        lat: localStorage.getItem('dropofflat'),\n        lng: localStorage.getItem('dropogflng')\n      };\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, function (result, status) {\n        if (status === google.maps.DirectionsStatus.OK) {\n          _this2.setState({\n            directions: result\n          });\n        } else {\n          console.error(\"error fetching directions \".concat(result));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var GoogleMapExample = withGoogleMap(function (props) {\n        return __jsx(GoogleMap, {\n          defaultCenter: {\n            lat: 14.5995124,\n            lng: 120.9842195\n          },\n          defaultZoom: 13,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }\n        }, __jsx(DirectionsRenderer, {\n          directions: _this3.state.directions,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }));\n      });\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, __jsx(GoogleMapExample, {\n        containerElement: __jsx(\"div\", {\n          style: {\n            height: \"100vh\",\n            width: \"100% \"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }\n        }),\n        mapElement: __jsx(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 23\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","Polyline","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","Map","directions","directionsService","google","maps","DirectionsService","origin","lat","localStorage","getItem","lng","destination","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error","GoogleMapExample","props","state","height","width"],"mappings":";;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,kBAJF,QAKO,mBALP;;IAMMC,G;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,UAAU,EAAE;AADN,K;;;;;;;wCAIY;AAAA;;AAClB,UAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA1B;AAEA,UAAMC,MAAM,GAAG;AAAEC,QAAAA,GAAG,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAP;AAA2CC,QAAAA,GAAG,EAAEF,YAAY,CAACC,OAAb,CAAqB,YAArB;AAAhD,OAAf;AACA,UAAME,WAAW,GAAG;AAAEJ,QAAAA,GAAG,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAP;AAA2CC,QAAAA,GAAG,EAAEF,YAAY,CAACC,OAAb,CAAqB,YAArB;AAAhD,OAApB;AAEAP,MAAAA,iBAAiB,CAACU,KAAlB,CACE;AACEN,QAAAA,MAAM,EAAEA,MADV;AAEEK,QAAAA,WAAW,EAAEA,WAFf;AAGEE,QAAAA,UAAU,EAAEV,MAAM,CAACC,IAAP,CAAYU,UAAZ,CAAuBC;AAHrC,OADF,EAME,UAACC,MAAD,EAASC,MAAT,EAAoB;AAClB,YAAIA,MAAM,KAAKd,MAAM,CAACC,IAAP,CAAYc,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C,UAAA,MAAI,CAACC,QAAL,CAAc;AACZnB,YAAAA,UAAU,EAAEe;AADA,WAAd;AAGD,SAJD,MAIO;AACLK,UAAAA,OAAO,CAACC,KAAR,qCAA2CN,MAA3C;AACD;AACF,OAdH;AAgBD;;;6BAEQ;AAAA;;AACP,UAAMO,gBAAgB,GAAG3B,aAAa,CAAC,UAAA4B,KAAK;AAAA,eAC1C,MAAC,SAAD;AACE,UAAA,aAAa,EAAE;AAAEjB,YAAAA,GAAG,EAAE,UAAP;AAAoBG,YAAAA,GAAG,EAAE;AAAzB,WADjB;AAEE,UAAA,WAAW,EAAE,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE,MAAC,kBAAD;AACE,UAAA,UAAU,EAAE,MAAI,CAACe,KAAL,CAAWxB,UADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAD0C;AAAA,OAAN,CAAtC;AAWA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,gBAAD;AACE,QAAA,gBAAgB,EAAE;AAAK,UAAA,KAAK,EAAE;AAAEyB,YAAAA,MAAM,SAAR;AAAmBC,YAAAA,KAAK,EAAE;AAA1B,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADpB;AAEE,QAAA,UAAU,EAAE;AAAK,UAAA,KAAK,EAAE;AAAED,YAAAA,MAAM;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;;EAjDehC,S;;AAoDlB,eAAeM,GAAf","sourcesContent":["/*global google*/\r\nimport React, { Component } from \"react\";\r\nimport { Polyline } from 'react-google-maps';\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  GoogleMap,\r\n  DirectionsRenderer\r\n} from \"react-google-maps\";\r\nclass Map extends Component {\r\n  state = {\r\n    directions: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const directionsService = new google.maps.DirectionsService();\r\n\r\n    const origin = { lat: localStorage.getItem('pickofflat'), lng: localStorage.getItem('pickofflng') };\r\n    const destination = { lat: localStorage.getItem('dropofflat'), lng: localStorage.getItem('dropogflng') };\r\n\r\n    directionsService.route(\r\n      {\r\n        origin: origin, \r\n        destination: destination,\r\n        travelMode: google.maps.TravelMode.DRIVING\r\n      },\r\n      (result, status) => {\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          this.setState({\r\n            directions: result\r\n          });\r\n        } else {\r\n          console.error(`error fetching directions ${result}`);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const GoogleMapExample = withGoogleMap(props => (\r\n      <GoogleMap\r\n        defaultCenter={{ lat: 14.5995124 , lng: 120.9842195 }}\r\n        defaultZoom={13}\r\n      >\r\n        <DirectionsRenderer\r\n          directions={this.state.directions}\r\n        />\r\n      </GoogleMap>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <GoogleMapExample\r\n          containerElement={<div style={{ height: `100vh`, width: \"100% \" }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}