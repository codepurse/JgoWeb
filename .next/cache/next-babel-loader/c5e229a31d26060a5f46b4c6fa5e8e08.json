{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\pages\\\\custommap.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport Geocode from \"react-geocode\";\nvar containerStyle = {\n  position: \"relative\",\n  width: \"100%\",\n  height: \"auto\"\n};\nvar style = {\n  width: \"100%\",\n  height: \"100%\",\n  margin: \"auto\"\n};\nexport var MainMap = /*#__PURE__*/function (_Component) {\n  _inherits(MainMap, _Component);\n\n  var _super = _createSuper(MainMap);\n\n  function MainMap(props) {\n    var _this;\n\n    _classCallCheck(this, MainMap);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      markers: [{\n        title: \"The marker`s title will appear as a tooltip.\",\n        name: \"SOMA\",\n        position: {\n          lat: \"\",\n          lng: \"\"\n        }\n      }]\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MainMap, [{\n    key: \"onClick\",\n    value: function onClick(t, map, coord) {\n      Geocode.setApiKey(\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\");\n      var latLng = coord.latLng;\n      var lat = latLng.lat();\n      var lng = latLng.lng();\n      console.log(lat);\n      console.log(lng);\n      Geocode.fromLatLng(lat, lng).then(function (response) {\n        var address = response.results[0].formatted_address;\n        console.log(address);\n        global.config.place.deliver.pickoff = address;\n        global.config.place.deliver.pickofflat = lat;\n        global.config.place.deliver.dropofflang = lng;\n      }, function (error) {\n        console.error(error);\n      });\n      this.setState(function (previousState) {\n        return {\n          markers: [].concat(_toConsumableArray(previousState.markers), [{\n            title: \"\",\n            name: \"\",\n            position: {\n              lat: lat,\n              lng: lng\n            }\n          }])\n        };\n      });\n      this.state.markers.length = 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        style: {\n          position: \"relative\",\n          height: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, __jsx(Map, {\n        google: this.props.google,\n        style: style,\n        className: \"map\",\n        zoom: 8,\n        onClick: this.onClick,\n        initialCenter: {\n          lat: 14.5995,\n          lng: 120.9842\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, this.state.markers.map(function (marker, index) {\n        return __jsx(Marker, {\n          key: index,\n          title: marker.title,\n          name: marker.name,\n          position: marker.position,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        });\n      })));\n    }\n  }]);\n\n  return MainMap;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\"\n})(MainMap);","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/pages/custommap.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","Geocode","containerStyle","position","width","height","style","margin","MainMap","props","state","markers","title","name","lat","lng","onClick","bind","t","map","coord","setApiKey","latLng","console","log","fromLatLng","then","response","address","results","formatted_address","global","config","place","deliver","pickoff","pickofflat","dropofflang","error","setState","previousState","length","google","marker","index","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst containerStyle = {\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n};\r\nconst style = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  margin: \"auto\",\r\n};\r\nexport class MainMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      markers: [\r\n        {\r\n          title: \"The marker`s title will appear as a tooltip.\",\r\n          name: \"SOMA\",\r\n          position: { lat: \"\", lng: \"\" },\r\n        },\r\n      ],\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick(t, map, coord) {\r\n    Geocode.setApiKey(\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\");\r\n    const { latLng } = coord;\r\n    const lat = latLng.lat();\r\n    const lng = latLng.lng();\r\n    console.log(lat);\r\n    console.log(lng);\r\n\r\n    Geocode.fromLatLng(lat, lng).then(\r\n      (response) => {\r\n        const address = response.results[0].formatted_address;\r\n        console.log(address);\r\n        global.config.place.deliver.pickoff = address;\r\n        global.config.place.deliver.pickofflat = lat;\r\n        global.config.place.deliver.dropofflang = lng;\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n    this.setState((previousState) => {\r\n      return {\r\n        markers: [\r\n          ...previousState.markers,\r\n          {\r\n            title: \"\",\r\n            name: \"\",\r\n            position: { lat, lng },\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    this.state.markers.length = 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          height: \"500px\",\r\n        }}\r\n      >\r\n        <Map\r\n          google={this.props.google}\r\n          style={style}\r\n          className={\"map\"}\r\n          zoom={8}\r\n          onClick={this.onClick}\r\n          initialCenter={{\r\n            lat: 14.5995,\r\n            lng: 120.9842\r\n          }}\r\n        >\r\n          {this.state.markers.map((marker, index) => (\r\n            <Marker\r\n              key={index}\r\n              title={marker.title}\r\n              name={marker.name}\r\n              position={marker.position}\r\n            />\r\n          ))}\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\",\r\n})(MainMap);\r\n"]},"metadata":{},"sourceType":"module"}