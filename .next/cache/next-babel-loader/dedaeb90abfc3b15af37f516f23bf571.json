{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\deliver.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nconst searchOptions = {\n  componentRestrictions: {\n    country: [\"ph\"]\n  }\n};\nexport class deliver extends Component {\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"col-lg-6 colDeliver\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      className: \"pTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"Book your delivery now!\"), __jsx(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, __jsx(PlacesAutocomplete, {\n      value: address,\n      onChange: setAddress,\n      onSelect: handleSelect,\n      searchOptions: searchOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", _extends({}, getInputProps({\n      placeholder: \"Type address\",\n      className: \"location-search-input\"\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    })), __jsx(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, loading && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n      } : {\n        backgroundColor: \"#ffffff\",\n        cursor: \"pointer\"\n      };\n      return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n        className: \"input-suggestion\",\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }\n      }, suggestion.description));\n    })))), __jsx(PlacesAutocomplete, {\n      value: addressDrop,\n      onChange: setAddressDrop,\n      onSelect: handleSelectDrop,\n      searchOptions: searchOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", _extends({}, getInputProps({\n      placeholder: \"Type address\",\n      className: \"location-search-input\"\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    })), __jsx(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, loading && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n      } : {\n        backgroundColor: \"#ffffff\",\n        cursor: \"pointer\"\n      };\n      return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n        className: \"input-suggestion\",\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 27\n        }\n      }, suggestion.description));\n    }))))), __jsx(Link, {\n      href: \"/map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, __jsx(\"input\", {\n      type: \"button\",\n      className: \"btnSubmit\",\n      value: \"SUBMIT\",\n      onClick: clickSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\nexport default deliver;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/deliver.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","searchOptions","componentRestrictions","country","deliver","render","address","setAddress","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","addressDrop","setAddressDrop","handleSelectDrop","clickSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nconst searchOptions = {\r\n  componentRestrictions: { country: [\"ph\"] },\r\n};\r\n\r\n\r\n\r\nexport class deliver extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"col-lg-6 colDeliver\">\r\n          <p className=\"pTitle\">Book your delivery now!</p>\r\n          <div className=\"box\">\r\n            <PlacesAutocomplete\r\n              value={address}\r\n              onChange={setAddress}\r\n              onSelect={handleSelect}\r\n              searchOptions={searchOptions}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div>\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Type address\",\r\n                      className: \"location-search-input\",\r\n                    })}\r\n                  />\r\n\r\n                  <div className=\"autocomplete-dropdown-container\">\r\n                    {loading && <div>Loading...</div>}\r\n                    {suggestions.map((suggestion) => {\r\n                      const className = suggestion.active\r\n                        ? \"suggestion-item--active\"\r\n                        : \"suggestion-item\";\r\n                      // inline style for demonstration purpose\r\n                      const style = suggestion.active\r\n                        ? {\r\n                            backgroundColor: \"#fafafa\",\r\n                            cursor: \"pointer\",\r\n                          }\r\n                        : {\r\n                            backgroundColor: \"#ffffff\",\r\n                            cursor: \"pointer\",\r\n                          };\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                            className: \"input-suggestion\",\r\n                            style,\r\n                          })}\r\n                        >\r\n                          <span>{suggestion.description}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n            <PlacesAutocomplete\r\n              value={addressDrop}\r\n              onChange={setAddressDrop}\r\n              onSelect={handleSelectDrop}\r\n              searchOptions={searchOptions}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div>\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Type address\",\r\n                      className: \"location-search-input\",\r\n                    })}\r\n                  />\r\n\r\n                  <div className=\"autocomplete-dropdown-container\">\r\n                    {loading && <div>Loading...</div>}\r\n                    {suggestions.map((suggestion) => {\r\n                      const className = suggestion.active\r\n                        ? \"suggestion-item--active\"\r\n                        : \"suggestion-item\";\r\n                      // inline style for demonstration purpose\r\n                      const style = suggestion.active\r\n                        ? {\r\n                            backgroundColor: \"#fafafa\",\r\n                            cursor: \"pointer\",\r\n                          }\r\n                        : {\r\n                            backgroundColor: \"#ffffff\",\r\n                            cursor: \"pointer\",\r\n                          };\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                            className: \"input-suggestion\",\r\n                            style,\r\n                          })}\r\n                        >\r\n                          <span>{suggestion.description}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n          </div>\r\n          <Link href=\"/map\">\r\n            <input\r\n              type=\"button\"\r\n              className=\"btnSubmit\"\r\n              value=\"SUBMIT\"\r\n              onClick={clickSubmit()}\r\n            ></input>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default deliver;\r\n"]},"metadata":{},"sourceType":"module"}