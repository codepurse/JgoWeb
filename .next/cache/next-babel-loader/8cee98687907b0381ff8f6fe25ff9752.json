{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\deliver.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nfunction clickSubmit() {\n  global.config.place.deliver.pickoff = address;\n  global.config.place.deliver.dropoff = addressDrop;\n  global.config.place.deliver.pickofflat = coordinates.lat;\n  global.config.place.deliver.pickofflang = coordinates.lng;\n  global.config.place.deliver.dropofflat = coordinatesDrop.lat;\n  global.config.place.deliver.dropofflang = coordinatesDrop.lng;\n}\n\nexport var deliver = /*#__PURE__*/function (_Component) {\n  _inherits(deliver, _Component);\n\n  var _super = _createSuper(deliver);\n\n  function deliver() {\n    _classCallCheck(this, deliver);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(deliver, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-6 colDeliver\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        className: \"pTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, \"Book your delivery now!\"), __jsx(\"div\", {\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, __jsx(PlacesAutocomplete, {\n        value: address,\n        onChange: setAddress,\n        onSelect: handleSelect,\n        searchOptions: searchOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            suggestions = _ref.suggestions,\n            getSuggestionItemProps = _ref.getSuggestionItemProps,\n            loading = _ref.loading;\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }, __jsx(\"input\", _extends({}, getInputProps({\n          placeholder: \"Type address\",\n          className: \"location-search-input\"\n        }), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }\n        })), __jsx(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }\n        }, loading && __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }\n        }, \"Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n          var style = suggestion.active ? {\n            backgroundColor: \"#fafafa\",\n            cursor: \"pointer\"\n          } : {\n            backgroundColor: \"#ffffff\",\n            cursor: \"pointer\"\n          };\n          return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n            className: \"input-suggestion\",\n            style: style\n          }), {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }\n          }), __jsx(\"span\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 27\n            }\n          }, suggestion.description));\n        })));\n      }), __jsx(PlacesAutocomplete, {\n        value: addressDrop,\n        onChange: setAddressDrop,\n        onSelect: handleSelectDrop,\n        searchOptions: searchOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, function (_ref2) {\n        var getInputProps = _ref2.getInputProps,\n            suggestions = _ref2.suggestions,\n            getSuggestionItemProps = _ref2.getSuggestionItemProps,\n            loading = _ref2.loading;\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }, __jsx(\"input\", _extends({}, getInputProps({\n          placeholder: \"Type address\",\n          className: \"location-search-input\"\n        }), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }\n        })), __jsx(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }\n        }, loading && __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }\n        }, \"Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n          var style = suggestion.active ? {\n            backgroundColor: \"#fafafa\",\n            cursor: \"pointer\"\n          } : {\n            backgroundColor: \"#ffffff\",\n            cursor: \"pointer\"\n          };\n          return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n            className: \"input-suggestion\",\n            style: style\n          }), {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }\n          }), __jsx(\"span\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 27\n            }\n          }, suggestion.description));\n        })));\n      })), __jsx(Link, {\n        href: \"/map\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, __jsx(\"input\", {\n        type: \"button\",\n        className: \"btnSubmit\",\n        value: \"SUBMIT\",\n        onClick: clickSubmit(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return deliver;\n}(Component);\nexport default deliver;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/deliver.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","clickSubmit","global","config","place","deliver","pickoff","address","dropoff","addressDrop","pickofflat","coordinates","lat","pickofflang","lng","dropofflat","coordinatesDrop","dropofflang","setAddress","handleSelect","searchOptions","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","setAddressDrop","handleSelectDrop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nfunction clickSubmit() {\r\n  global.config.place.deliver.pickoff = address;\r\n  global.config.place.deliver.dropoff = addressDrop;\r\n\r\n  global.config.place.deliver.pickofflat = coordinates.lat;\r\n  global.config.place.deliver.pickofflang = coordinates.lng;\r\n\r\n  global.config.place.deliver.dropofflat = coordinatesDrop.lat;\r\n  global.config.place.deliver.dropofflang = coordinatesDrop.lng;\r\n}\r\n\r\nexport class deliver extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"col-lg-6 colDeliver\">\r\n          <p className=\"pTitle\">Book your delivery now!</p>\r\n          <div className=\"box\">\r\n            <PlacesAutocomplete\r\n              value={address}\r\n              onChange={setAddress}\r\n              onSelect={handleSelect}\r\n              searchOptions={searchOptions}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div>\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Type address\",\r\n                      className: \"location-search-input\",\r\n                    })}\r\n                  />\r\n\r\n                  <div className=\"autocomplete-dropdown-container\">\r\n                    {loading && <div>Loading...</div>}\r\n                    {suggestions.map((suggestion) => {\r\n                      const className = suggestion.active\r\n                        ? \"suggestion-item--active\"\r\n                        : \"suggestion-item\";\r\n                      // inline style for demonstration purpose\r\n                      const style = suggestion.active\r\n                        ? {\r\n                            backgroundColor: \"#fafafa\",\r\n                            cursor: \"pointer\",\r\n                          }\r\n                        : {\r\n                            backgroundColor: \"#ffffff\",\r\n                            cursor: \"pointer\",\r\n                          };\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                            className: \"input-suggestion\",\r\n                            style,\r\n                          })}\r\n                        >\r\n                          <span>{suggestion.description}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n            <PlacesAutocomplete\r\n              value={addressDrop}\r\n              onChange={setAddressDrop}\r\n              onSelect={handleSelectDrop}\r\n              searchOptions={searchOptions}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div>\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Type address\",\r\n                      className: \"location-search-input\",\r\n                    })}\r\n                  />\r\n\r\n                  <div className=\"autocomplete-dropdown-container\">\r\n                    {loading && <div>Loading...</div>}\r\n                    {suggestions.map((suggestion) => {\r\n                      const className = suggestion.active\r\n                        ? \"suggestion-item--active\"\r\n                        : \"suggestion-item\";\r\n                      // inline style for demonstration purpose\r\n                      const style = suggestion.active\r\n                        ? {\r\n                            backgroundColor: \"#fafafa\",\r\n                            cursor: \"pointer\",\r\n                          }\r\n                        : {\r\n                            backgroundColor: \"#ffffff\",\r\n                            cursor: \"pointer\",\r\n                          };\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                            className: \"input-suggestion\",\r\n                            style,\r\n                          })}\r\n                        >\r\n                          <span>{suggestion.description}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n          </div>\r\n          <Link href=\"/map\">\r\n            <input\r\n              type=\"button\"\r\n              className=\"btnSubmit\"\r\n              value=\"SUBMIT\"\r\n              onClick={clickSubmit()}\r\n            ></input>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default deliver;\r\n"]},"metadata":{},"sourceType":"module"}