{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\pages\\\\custommap.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nexport var MainMap = /*#__PURE__*/function (_Component) {\n  _inherits(MainMap, _Component);\n\n  var _super = _createSuper(MainMap);\n\n  function MainMap() {\n    var _this;\n\n    _classCallCheck(this, MainMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"addMarker\", function (location, map) {\n      _this.setState(function (prev) {\n        return {\n          fields: _objectSpread(_objectSpread({}, prev.fields), {}, {\n            location: location\n          })\n        };\n      });\n\n      map.panTo(location);\n    });\n\n    return _this;\n  }\n\n  _createClass(MainMap, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$this$getcurren, lat, lng;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.getcurrentLocation();\n\n              case 2:\n                _yield$this$getcurren = _context.sent;\n                lat = _yield$this$getcurren.lat;\n                lng = _yield$this$getcurren.lng;\n                this.setState(function (prev) {\n                  return {\n                    fields: _objectSpread(_objectSpread({}, prev.fields), {}, {\n                      location: {\n                        lat: lat,\n                        lng: lng\n                      }\n                    }),\n                    currentLocation: {\n                      lat: lat,\n                      lng: lng\n                    }\n                  };\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getcurrentLocation\",\n    value: function getcurrentLocation() {\n      if (navigator && navigator.geolocation) {\n        return new Promise(function (resolve, reject) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n            resolve({\n              lat: coords.latitude,\n              lng: coords.longitude\n            });\n          });\n        });\n      }\n\n      return {\n        lat: 0,\n        lng: 0\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"My Maps\"), __jsx(Map, {\n        google: this.props.google,\n        style: {\n          width: '80%',\n          margin: 'auto'\n        },\n        className: 'map',\n        zoom: 14,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, __jsx(Marker, {\n        title: 'The marker`s title will appear as a tooltip.',\n        name: 'SOMA',\n        position: {\n          lat: 37.778519,\n          lng: -122.405640\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }), __jsx(Marker, {\n        name: 'Dolores park',\n        position: {\n          lat: 37.759703,\n          lng: -122.428093\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }), __jsx(Marker, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), __jsx(Marker, {\n        name: 'Your position',\n        position: {\n          lat: 46.475640,\n          lng: 30.759497\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return MainMap;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\"\n})(MainMap);","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/pages/custommap.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","MainMap","location","map","setState","prev","fields","panTo","getcurrentLocation","lat","lng","currentLocation","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","pos","coords","latitude","longitude","props","google","width","margin","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nexport class MainMap extends Component {\r\n    async componentDidMount() {\r\n        const { lat, lng } = await this.getcurrentLocation();\r\n        this.setState(prev => ({\r\n          fields: {\r\n            ...prev.fields,\r\n            location: {\r\n              lat,\r\n              lng\r\n            }\r\n          },\r\n          currentLocation: {\r\n            lat,\r\n            lng\r\n          }\r\n        }));\r\n      }\r\n    \r\n       getcurrentLocation() {\r\n        if (navigator && navigator.geolocation) {\r\n          return new Promise((resolve, reject) => {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n              const coords = pos.coords;\r\n              resolve({\r\n                lat: coords.latitude,\r\n                lng: coords.longitude\r\n              });\r\n            });\r\n          });\r\n        }\r\n        return {\r\n          lat: 0,\r\n          lng: 0\r\n        };\r\n      }\r\n      addMarker = (location, map) => {\r\n        this.setState(prev => ({\r\n          fields: {\r\n            ...prev.fields,\r\n            location\r\n          }\r\n        }));\r\n        map.panTo(location);\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center\">My Maps</h1>\r\n            <Map google={this.props.google}\r\n                 style={{width: '80%', margin: 'auto'}}\r\n                 className={'map'}\r\n                 zoom={14}>\r\n                <Marker\r\n                    title={'The marker`s title will appear as a tooltip.'}\r\n                    name={'SOMA'}\r\n                    position={{lat: 37.778519, lng: -122.405640}} />\r\n                <Marker\r\n                    name={'Dolores park'}\r\n                    position={{lat: 37.759703, lng: -122.428093}} />\r\n                <Marker />  \r\n                <Marker\r\n                    name={'Your position'}\r\n                    position={{lat: 46.475640, lng: 30.759497}}/>\r\n            </Map>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: (\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\")\r\n})(MainMap);"]},"metadata":{},"sourceType":"module"}