{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Github\\\\JgoWeb\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\n\nconst regions = require(\"philippines/regions\");\n\nconst province = require(\"philippines/provinces\");\n\nconst cities = require(\"philippines/cities\");\n\nexport class signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      regions_api: {\n        value: \"\",\n        name: \"\"\n      },\n      province_api: {\n        value: \"\",\n        name: \"\"\n      },\n      cities_api: {\n        value: \"\",\n        name: \"\"\n      },\n      region_change: \"\",\n      province_change: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const data_regions = regions.map(d => ({\n      value: d.key,\n      label: d.name\n    }));\n    this.setState({\n      regions_api: data_regions\n    });\n  }\n\n  HandleChangeRegion(e) {\n    this.setState({\n      region_change: e.value\n    });\n    const data = province.filter(person => person.region === e.value).map(d => ({\n      id: d.key,\n      value: d.key,\n      label: d.name\n    }));\n    this.setState({\n      province_api: data\n    });\n  }\n\n  HandleChangeProvince(e) {\n    setProvinceChange(e.value);\n    this.setState({\n      province_change: e.value\n    });\n    const data = cities.filter(person => person.province === e.id).map(d => ({\n      value: d.name,\n      label: d.name\n    }));\n    setCities(data);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, __jsx(Select, {\n      options: this.state.regions_api,\n      onChange: this.HandleChangeRegion.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), __jsx(Select, {\n      options: this.state.province_api,\n      onChange: this.HandleChangeProvince.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default signup;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Github/JgoWeb/pages/signup.js"],"names":["React","Component","Select","regions","require","province","cities","signup","constructor","props","state","regions_api","value","name","province_api","cities_api","region_change","province_change","componentDidMount","data_regions","map","d","key","label","setState","HandleChangeRegion","e","data","filter","person","region","id","HandleChangeProvince","setProvinceChange","setCities","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst regions = require(\"philippines/regions\");\r\nconst province = require(\"philippines/provinces\");\r\nconst cities = require(\"philippines/cities\");\r\n\r\nexport class signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      regions_api: {\r\n        value: \"\",\r\n        name: \"\",\r\n      },\r\n      province_api: {\r\n        value: \"\",\r\n        name: \"\",\r\n      },\r\n      cities_api: {\r\n        value: \"\",\r\n        name: \"\",\r\n      },\r\n      region_change: \"\",\r\n      province_change: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const data_regions = regions.map((d) => ({\r\n      value: d.key,\r\n      label: d.name,\r\n    }));\r\n    this.setState({ regions_api: data_regions });\r\n  }\r\n\r\n  HandleChangeRegion(e) {\r\n    this.setState({ region_change: e.value });\r\n    const data = province\r\n      .filter((person) => person.region === e.value)\r\n      .map((d) => ({\r\n        id: d.key,\r\n        value: d.key,\r\n        label: d.name,\r\n      }));\r\n    this.setState({ province_api: data });\r\n  }\r\n\r\n  HandleChangeProvince(e) {\r\n    setProvinceChange(e.value);\r\n    this.setState({province_change: e.value });\r\n    const data = cities\r\n      .filter((person) => person.province === e.id)\r\n      .map((d) => ({\r\n        value: d.name,\r\n        label: d.name,\r\n      }));\r\n    setCities(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Select\r\n          options={this.state.regions_api}\r\n          onChange={this.HandleChangeRegion.bind(this)}\r\n        />\r\n        <Select\r\n          options={this.state.province_api}\r\n          onChange={this.HandleChangeProvince.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default signup;\r\n"]},"metadata":{},"sourceType":"module"}