{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\deliver.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nvar searchOptions = {\n  componentRestrictions: {\n    country: [\"ph\"]\n  }\n};\n\nvar _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    address = _React$useState2[0],\n    setAddress = _React$useState2[1];\n\nvar _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    addressDrop = _React$useState4[0],\n    setAddressDrop = _React$useState4[1];\n\nvar _React$useState5 = React.useState({\n  lat: null,\n  lng: null\n}),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    coordinates = _React$useState6[0],\n    setCoordinates = _React$useState6[1];\n\nvar _React$useState7 = React.useState({\n  lat: null,\n  lng: null\n}),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    coordinatesDrop = _React$useState8[0],\n    setCoordinatesDrop = _React$useState8[1];\n\nvar handleSelect = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n    var results, latLng;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return geocodeByAddress(value);\n\n          case 2:\n            results = _context.sent;\n            _context.next = 5;\n            return getLatLng(results[0]);\n\n          case 5:\n            latLng = _context.sent;\n            setAddress(value);\n            setCoordinates(latLng);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function handleSelect(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar handleSelectDrop = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n    var results, latLng;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return geocodeByAddress(value);\n\n          case 2:\n            results = _context2.sent;\n            _context2.next = 5;\n            return getLatLng(results[0]);\n\n          case 5:\n            latLng = _context2.sent;\n            setAddressDrop(value);\n            setCoordinatesDrop(latLng);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function handleSelectDrop(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport var deliver = /*#__PURE__*/function (_Component) {\n  _inherits(deliver, _Component);\n\n  var _super = _createSuper(deliver);\n\n  function deliver() {\n    _classCallCheck(this, deliver);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(deliver, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-6 colDeliver\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        className: \"pTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \"Book your delivery now!\"), __jsx(\"div\", {\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, __jsx(PlacesAutocomplete, {\n        value: address,\n        onChange: setAddress,\n        onSelect: handleSelect,\n        searchOptions: searchOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, function (_ref3) {\n        var getInputProps = _ref3.getInputProps,\n            suggestions = _ref3.suggestions,\n            getSuggestionItemProps = _ref3.getSuggestionItemProps,\n            loading = _ref3.loading;\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }\n        }, __jsx(\"input\", _extends({}, getInputProps({\n          placeholder: \"Type address\",\n          className: \"location-search-input\"\n        }), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }\n        })), __jsx(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }\n        }, loading && __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }\n        }, \"Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n          var style = suggestion.active ? {\n            backgroundColor: \"#fafafa\",\n            cursor: \"pointer\"\n          } : {\n            backgroundColor: \"#ffffff\",\n            cursor: \"pointer\"\n          };\n          return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n            className: \"input-suggestion\",\n            style: style\n          }), {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }\n          }), __jsx(\"span\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 27\n            }\n          }, suggestion.description));\n        })));\n      }), __jsx(PlacesAutocomplete, {\n        value: addressDrop,\n        onChange: setAddressDrop,\n        onSelect: handleSelectDrop,\n        searchOptions: searchOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, function (_ref4) {\n        var getInputProps = _ref4.getInputProps,\n            suggestions = _ref4.suggestions,\n            getSuggestionItemProps = _ref4.getSuggestionItemProps,\n            loading = _ref4.loading;\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        }, __jsx(\"input\", _extends({}, getInputProps({\n          placeholder: \"Type address\",\n          className: \"location-search-input\"\n        }), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }\n        })), __jsx(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }\n        }, loading && __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }\n        }, \"Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n          var style = suggestion.active ? {\n            backgroundColor: \"#fafafa\",\n            cursor: \"pointer\"\n          } : {\n            backgroundColor: \"#ffffff\",\n            cursor: \"pointer\"\n          };\n          return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n            className: \"input-suggestion\",\n            style: style\n          }), {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }\n          }), __jsx(\"span\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 27\n            }\n          }, suggestion.description));\n        })));\n      })), __jsx(Link, {\n        href: \"/map\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, __jsx(\"input\", {\n        type: \"button\",\n        className: \"btnSubmit\",\n        value: \"SUBMIT\",\n        onClick: clickSubmit(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return deliver;\n}(Component);\nexport default deliver;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/deliver.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","searchOptions","componentRestrictions","country","useState","address","setAddress","addressDrop","setAddressDrop","lat","lng","coordinates","setCoordinates","coordinatesDrop","setCoordinatesDrop","handleSelect","value","results","latLng","handleSelectDrop","deliver","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","clickSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nconst searchOptions = {\r\n  componentRestrictions: { country: [\"ph\"] },\r\n};\r\n\r\n\r\nconst [address, setAddress] = React.useState(\"\");\r\nconst [addressDrop, setAddressDrop] = React.useState(\"\");\r\nconst [coordinates, setCoordinates] = React.useState({\r\n  lat: null,\r\n  lng: null,\r\n});\r\nconst [coordinatesDrop, setCoordinatesDrop] = React.useState({\r\n  lat: null,\r\n  lng: null,\r\n});\r\n\r\nconst handleSelect = async (value) => {\r\n  const results = await geocodeByAddress(value);\r\n  const latLng = await getLatLng(results[0]);\r\n  setAddress(value);\r\n  setCoordinates(latLng);\r\n};\r\n\r\nconst handleSelectDrop = async (value) => {\r\n  const results = await geocodeByAddress(value);\r\n  const latLng = await getLatLng(results[0]);\r\n  setAddressDrop(value);\r\n  setCoordinatesDrop(latLng);\r\n};\r\n\r\nexport class deliver extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"col-lg-6 colDeliver\">\r\n          <p className=\"pTitle\">Book your delivery now!</p>\r\n          <div className=\"box\">\r\n            <PlacesAutocomplete\r\n              value={address}\r\n              onChange={setAddress}\r\n              onSelect={handleSelect}\r\n              searchOptions={searchOptions}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div>\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Type address\",\r\n                      className: \"location-search-input\",\r\n                    })}\r\n                  />\r\n\r\n                  <div className=\"autocomplete-dropdown-container\">\r\n                    {loading && <div>Loading...</div>}\r\n                    {suggestions.map((suggestion) => {\r\n                      const className = suggestion.active\r\n                        ? \"suggestion-item--active\"\r\n                        : \"suggestion-item\";\r\n                      // inline style for demonstration purpose\r\n                      const style = suggestion.active\r\n                        ? {\r\n                            backgroundColor: \"#fafafa\",\r\n                            cursor: \"pointer\",\r\n                          }\r\n                        : {\r\n                            backgroundColor: \"#ffffff\",\r\n                            cursor: \"pointer\",\r\n                          };\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                            className: \"input-suggestion\",\r\n                            style,\r\n                          })}\r\n                        >\r\n                          <span>{suggestion.description}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n            <PlacesAutocomplete\r\n              value={addressDrop}\r\n              onChange={setAddressDrop}\r\n              onSelect={handleSelectDrop}\r\n              searchOptions={searchOptions}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div>\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Type address\",\r\n                      className: \"location-search-input\",\r\n                    })}\r\n                  />\r\n\r\n                  <div className=\"autocomplete-dropdown-container\">\r\n                    {loading && <div>Loading...</div>}\r\n                    {suggestions.map((suggestion) => {\r\n                      const className = suggestion.active\r\n                        ? \"suggestion-item--active\"\r\n                        : \"suggestion-item\";\r\n                      // inline style for demonstration purpose\r\n                      const style = suggestion.active\r\n                        ? {\r\n                            backgroundColor: \"#fafafa\",\r\n                            cursor: \"pointer\",\r\n                          }\r\n                        : {\r\n                            backgroundColor: \"#ffffff\",\r\n                            cursor: \"pointer\",\r\n                          };\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                            className: \"input-suggestion\",\r\n                            style,\r\n                          })}\r\n                        >\r\n                          <span>{suggestion.description}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n          </div>\r\n          <Link href=\"/map\">\r\n            <input\r\n              type=\"button\"\r\n              className=\"btnSubmit\"\r\n              value=\"SUBMIT\"\r\n              onClick={clickSubmit()}\r\n            ></input>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default deliver;\r\n"]},"metadata":{},"sourceType":"module"}