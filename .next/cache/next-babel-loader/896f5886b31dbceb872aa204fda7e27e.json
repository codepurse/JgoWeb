{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\nvar __jsx = React.createElement;\n\n/* global google */\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport Head from 'next/head';\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMapReady = this.handleMapReady.bind(this);\n  }\n\n  handleMapReady(mapProps, map) {\n    this.calculateAndDisplayRoute(map);\n  }\n\n  calculateAndDisplayRoute(map) {\n    try {\n      const directionsService = new google.maps.DirectionsService();\n      const directionsDisplay = new google.maps.DirectionsRenderer();\n      directionsDisplay.setMap(map);\n      const waypoints = this.props.data.map(item => {\n        return {\n          location: {\n            lat: item.lat,\n            lng: item.lng\n          },\n          stopover: true\n        };\n      });\n      const origin = waypoints.shift().location;\n      const destination = waypoints.pop().location;\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        waypoints: waypoints,\n        travelMode: 'DRIVING'\n      }, (response, status) => {\n        if (status === 'OK') {\n          directionsDisplay.setDirections(response);\n        } else {\n          window.alert('Directions request failed due to ' + status);\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(Map, {\n      google: this.props.google,\n      className: \"map\",\n      zoom: this.props.zoom,\n      initialCenter: this.props.center,\n      onReady: this.handleMapReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\",\n  libraries: []\n})(MapContainer);","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","Map","GoogleApiWrapper","Head","MapContainer","constructor","props","handleMapReady","bind","mapProps","map","calculateAndDisplayRoute","directionsService","google","maps","DirectionsService","directionsDisplay","DirectionsRenderer","setMap","waypoints","data","item","location","lat","lng","stopover","origin","shift","destination","pop","route","travelMode","response","status","setDirections","window","alert","err","console","log","render","zoom","center","apiKey","libraries"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,YAAN,SAA2BL,KAAK,CAACC,SAAjC,CAA2C;AACzCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,CAACE,QAAD,EAAWC,GAAX,EAAgB;AAC5B,SAAKC,wBAAL,CAA8BD,GAA9B;AACD;;AAEDC,EAAAA,wBAAwB,CAACD,GAAD,EAAM;AAC7B,QAAI;AACH,YAAME,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA1B;AACA,YAAMC,iBAAiB,GAAG,IAAIH,MAAM,CAACC,IAAP,CAAYG,kBAAhB,EAA1B;AACAD,MAAAA,iBAAiB,CAACE,MAAlB,CAAyBR,GAAzB;AAGA,YAAMS,SAAS,GAAG,KAAKb,KAAL,CAAWc,IAAX,CAAgBV,GAAhB,CAAoBW,IAAI,IAAG;AAC3C,eAAM;AACJC,UAAAA,QAAQ,EAAE;AAACC,YAAAA,GAAG,EAAEF,IAAI,CAACE,GAAX;AAAgBC,YAAAA,GAAG,EAACH,IAAI,CAACG;AAAzB,WADN;AAEJC,UAAAA,QAAQ,EAAE;AAFN,SAAN;AAID,OALiB,CAAlB;AAMA,YAAMC,MAAM,GAAGP,SAAS,CAACQ,KAAV,GAAkBL,QAAjC;AACA,YAAMM,WAAW,GAAGT,SAAS,CAACU,GAAV,GAAgBP,QAApC;AAEAV,MAAAA,iBAAiB,CAACkB,KAAlB,CAAwB;AACtBJ,QAAAA,MAAM,EAAEA,MADc;AAEtBE,QAAAA,WAAW,EAAEA,WAFS;AAGtBT,QAAAA,SAAS,EAAEA,SAHW;AAItBY,QAAAA,UAAU,EAAE;AAJU,OAAxB,EAKG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACvB,YAAIA,MAAM,KAAK,IAAf,EAAqB;AACnBjB,UAAAA,iBAAiB,CAACkB,aAAlB,CAAgCF,QAAhC;AACD,SAFD,MAEO;AACLG,UAAAA,MAAM,CAACC,KAAP,CAAa,sCAAsCH,MAAnD;AACD;AACF,OAXD;AAYA,KA3BD,CA2BC,OAAMI,GAAN,EAAW;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKlC,KAAL,CAAWO,MADrB;AAEE,MAAA,SAAS,EAAE,KAFb;AAGE,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWmC,IAHnB;AAIE,MAAA,aAAa,EAAE,KAAKnC,KAAL,CAAWoC,MAJ5B;AAKE,MAAA,OAAO,EAAE,KAAKnC,cALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF;AAaD;;AAzDwC;;AA4D3C,eAAeL,gBAAgB,CAAC;AAC9ByC,EAAAA,MAAM,EAAE,yCADsB;AAE9BC,EAAAA,SAAS,EAAE;AAFmB,CAAD,CAAhB,CAGZxC,YAHY,CAAf","sourcesContent":["/* global google */\r\nimport React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\r\nimport Head from 'next/head';\r\nclass MapContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMapReady = this.handleMapReady.bind(this);\r\n  }\r\n\r\n  handleMapReady(mapProps, map) {\r\n    this.calculateAndDisplayRoute(map);\r\n  }\r\n\r\n  calculateAndDisplayRoute(map) {\r\n   try {\r\n    const directionsService = new google.maps.DirectionsService();\r\n    const directionsDisplay = new google.maps.DirectionsRenderer();\r\n    directionsDisplay.setMap(map);\r\n     \r\n    \r\n    const waypoints = this.props.data.map(item =>{\r\n      return{\r\n        location: {lat: item.lat, lng:item.lng},\r\n        stopover: true\r\n      }\r\n    })\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n    directionsService.route({\r\n      origin: origin,\r\n      destination: destination,\r\n      waypoints: waypoints,\r\n      travelMode: 'DRIVING'\r\n    }, (response, status) => {\r\n      if (status === 'OK') {\r\n        directionsDisplay.setDirections(response);\r\n      } else {\r\n        window.alert('Directions request failed due to ' + status);\r\n      }\r\n    });\r\n   }catch(err) {\r\n     console.log(err);\r\n   }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"map-container\">\r\n        <Map\r\n          google={this.props.google}\r\n          className={\"map\"}\r\n          zoom={this.props.zoom}\r\n          initialCenter={this.props.center}\r\n          onReady={this.handleMapReady}\r\n        />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\",\r\n  libraries: []\r\n})(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}