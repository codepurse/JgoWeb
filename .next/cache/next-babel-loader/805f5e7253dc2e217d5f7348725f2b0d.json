{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\",\n    _s = $RefreshSig$(),\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, DirectionsRenderer } from \"react-google-maps\";\nimport \"./config\";\n\nfunction MapDirectionsRenderer(props) {\n  _s();\n\n  var _useState = useState(null),\n      directions = _useState[0],\n      setDirections = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    var places = props.places,\n        travelMode = props.travelMode;\n    var waypoints = places.map(function (p) {\n      return {\n        location: {\n          lat: p.lat,\n          lng: p.lng\n        },\n        stopover: true\n      };\n    });\n    var origin = waypoints.shift().location;\n    var destination = waypoints.pop().location;\n    var directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: travelMode,\n      waypoints: waypoints\n    }, function (result, status) {\n      console.log(result);\n\n      if (status === google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      } else {\n        setError(result);\n      }\n    });\n  });\n\n  if (error) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }, error);\n  }\n\n  return directions && __jsx(DirectionsRenderer, {\n    directions: directions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  });\n}\n\n_s(MapDirectionsRenderer, \"EbZ3rf2k47q8bOIBnVG92TiLXsw=\");\n\n_c = MapDirectionsRenderer;\nvar Map = withScriptjs(_c3 = withGoogleMap(_c2 = function _c2(props) {\n  return __jsx(GoogleMap, {\n    defaultCenter: props.defaultCenter,\n    defaultZoom: props.defaultZoom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, props.markers.map(function (marker, index) {\n    var position = {\n      lat: marker.latitude,\n      lng: marker.longitude\n    };\n    return __jsx(Marker, {\n      key: index,\n      position: position,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }\n    });\n  }), __jsx(MapDirectionsRenderer, {\n    places: props.markers,\n    travelMode: google.maps.TravelMode.DRIVING,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}));\n_c4 = Map;\nexport default Map;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MapDirectionsRenderer\");\n$RefreshReg$(_c2, \"Map$withScriptjs$withGoogleMap\");\n$RefreshReg$(_c3, \"Map$withScriptjs\");\n$RefreshReg$(_c4, \"Map\");","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","useState","useEffect","withGoogleMap","GoogleMap","withScriptjs","Marker","DirectionsRenderer","MapDirectionsRenderer","props","directions","setDirections","error","setError","places","travelMode","waypoints","map","p","location","lat","lng","stopover","origin","shift","destination","pop","directionsService","google","maps","DirectionsService","route","result","status","console","log","DirectionsStatus","OK","Map","defaultCenter","defaultZoom","markers","marker","index","position","latitude","longitude","TravelMode","DRIVING"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  DirectionsRenderer\r\n} from \"react-google-maps\";\r\nimport \"./config\";\r\n\r\nfunction MapDirectionsRenderer(props) {\r\n\r\n  const [directions, setDirections] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    \r\n    const { places, travelMode } = props;\r\n\r\n    const waypoints = places.map(p => ({\r\n      location: { lat: p.lat, lng: p.lng},\r\n      stopover: true\r\n    }));\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n    const directionsService = new google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: travelMode,\r\n        waypoints: waypoints\r\n      },\r\n      (result, status) => {\r\n        console.log(result)\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          setDirections(result);\r\n        } else {\r\n          setError(result);\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return (\r\n    directions && (\r\n      <DirectionsRenderer directions={directions} />\r\n    )\r\n  );\r\n}\r\n\r\nconst Map = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap\r\n      defaultCenter={props.defaultCenter}\r\n      defaultZoom={props.defaultZoom}\r\n    >\r\n      {props.markers.map((marker, index) => {\r\n        const position = { lat: marker.latitude, lng: marker.longitude };\r\n        return <Marker key={index} position={position} />;\r\n      })}\r\n      <MapDirectionsRenderer\r\n        places={props.markers}\r\n        travelMode={google.maps.TravelMode.DRIVING}\r\n      />\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}