{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Github\\\\JgoWeb\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\n\nvar regions = require(\"philippines/regions\");\n\nexport var signup = /*#__PURE__*/function (_Component) {\n  _inherits(signup, _Component);\n\n  var _super = _createSuper(signup);\n\n  function signup(props) {\n    var _this;\n\n    _classCallCheck(this, signup);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      regions_api: {\n        value: \"\",\n        name: \"\"\n      },\n      province_api: {\n        value: \"\",\n        name: \"\"\n      },\n      region_change: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(signup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data_regions = regions.map(function (d) {\n        return {\n          value: d.key,\n          label: d.name\n        };\n      });\n      this.setState({\n        regions_api: data_regions\n      });\n    }\n  }, {\n    key: \"HandleChangeRegion\",\n    value: function HandleChangeRegion(e) {\n      this.setState({\n        region_change: e.value\n      });\n      var data = province.filter(function (person) {\n        return person.region === e.value;\n      }).map(function (d) {\n        return {\n          id: d.key,\n          value: d.key,\n          label: d.name\n        };\n      });\n      this.setState({\n        province_api: data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, __jsx(Select, {\n        options: this.state.regions_api,\n        onChange: this.HandleChangeRegion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }), __jsx(Select, {\n        options: province_api,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return signup;\n}(Component);\nexport default signup;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Github/JgoWeb/pages/signup.js"],"names":["React","Component","Select","regions","require","signup","props","state","regions_api","value","name","province_api","region_change","data_regions","map","d","key","label","setState","e","data","province","filter","person","region","id","HandleChangeRegion"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AAEA,WAAaC,MAAb;AAAA;;AAAA;;AACE,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE,EADI;AAEXC,QAAAA,IAAI,EAAE;AAFK,OADF;AAKXC,MAAAA,YAAY,EAAE;AACZF,QAAAA,KAAK,EAAE,EADK;AAEZC,QAAAA,IAAI,EAAE;AAFM,OALH;AASXE,MAAAA,aAAa,EAAE;AATJ,KAAb;AAFiB;AAalB;;AAdH;AAAA;AAAA,wCAgBsB;AAClB,UAAMC,YAAY,GAAGV,OAAO,CAACW,GAAR,CAAY,UAACC,CAAD;AAAA,eAAQ;AACvCN,UAAAA,KAAK,EAAEM,CAAC,CAACC,GAD8B;AAEvCC,UAAAA,KAAK,EAAEF,CAAC,CAACL;AAF8B,SAAR;AAAA,OAAZ,CAArB;AAIA,WAAKQ,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEK;AAAf,OAAd;AACD;AAtBH;AAAA;AAAA,uCAwBqBM,CAxBrB,EAwBwB;AACpB,WAAKD,QAAL,CAAc;AAACN,QAAAA,aAAa,EAAEO,CAAC,CAACV;AAAlB,OAAd;AACA,UAAMW,IAAI,GAAGC,QAAQ,CAClBC,MADU,CACH,UAACC,MAAD;AAAA,eAAYA,MAAM,CAACC,MAAP,KAAkBL,CAAC,CAACV,KAAhC;AAAA,OADG,EAEVK,GAFU,CAEN,UAACC,CAAD;AAAA,eAAQ;AACXU,UAAAA,EAAE,EAAEV,CAAC,CAACC,GADK;AAEXP,UAAAA,KAAK,EAAEM,CAAC,CAACC,GAFE;AAGXC,UAAAA,KAAK,EAAEF,CAAC,CAACL;AAHE,SAAR;AAAA,OAFM,CAAb;AAOA,WAAKQ,QAAL,CAAc;AAACP,QAAAA,YAAY,EAAES;AAAf,OAAd;AACD;AAlCH;AAAA;AAAA,6BAoCW;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWC,WADtB;AAEE,QAAA,QAAQ,EAAE,KAAKkB,kBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,MAAC,MAAD;AACE,QAAA,OAAO,EAAEf,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAWD;AAhDH;;AAAA;AAAA,EAA4BV,SAA5B;AAmDA,eAAeI,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst regions = require(\"philippines/regions\");\r\n\r\nexport class signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      regions_api: {\r\n        value: \"\",\r\n        name: \"\",\r\n      },\r\n      province_api: {\r\n        value: \"\",\r\n        name: \"\",\r\n      },\r\n      region_change: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const data_regions = regions.map((d) => ({\r\n      value: d.key,\r\n      label: d.name,\r\n    }));\r\n    this.setState({ regions_api: data_regions });\r\n  }\r\n\r\n  HandleChangeRegion(e) {\r\n    this.setState({region_change: e.value})\r\n    const data = province\r\n      .filter((person) => person.region === e.value)\r\n      .map((d) => ({\r\n        id: d.key,\r\n        value: d.key,\r\n        label: d.name,\r\n      }));\r\n    this.setState({province_api: data})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Select\r\n          options={this.state.regions_api}\r\n          onChange={this.HandleChangeRegion}\r\n        />\r\n        <Select\r\n          options={province_api}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default signup;\r\n"]},"metadata":{},"sourceType":"module"}