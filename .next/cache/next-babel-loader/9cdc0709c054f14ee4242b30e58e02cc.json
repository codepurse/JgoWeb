{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Github\\\\JgoWeb\\\\component\\\\map\\\\googlemap.js\",\n    _s = $RefreshSig$(),\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, DirectionsRenderer } from \"react-google-maps\";\nimport \"./config\";\n\nfunction MapDirectionsRenderer(props) {\n  _s();\n\n  var _useState = useState(null),\n      directions = _useState[0],\n      setDirections = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    var places = props.places,\n        travelMode = props.travelMode;\n    var waypoints = places.map(function (p) {\n      return {\n        location: {\n          lat: p.lat,\n          lng: p.lng\n        },\n        stopover: true\n      };\n    });\n    var origin = waypoints.shift().location;\n    var destination = waypoints.pop().location;\n    var directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: travelMode,\n      waypoints: waypoints\n    }, function (result, status) {\n      if (status === google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      } else {}\n    });\n  });\n\n  if (error) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }, error);\n  }\n\n  return directions && __jsx(DirectionsRenderer, {\n    directions: directions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }\n  });\n}\n\n_s(MapDirectionsRenderer, \"EbZ3rf2k47q8bOIBnVG92TiLXsw=\");\n\n_c = MapDirectionsRenderer;\nvar Map = withScriptjs(_c3 = withGoogleMap(_c2 = function _c2(props) {\n  return __jsx(GoogleMap, {\n    defaultCenter: props.defaultCenter,\n    defaultZoom: props.defaultZoom,\n    options: {\n      fullscreenControl: false,\n      mapTypeControl: false,\n      scaleControl: false,\n      streetViewControl: false,\n      styles: [{\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#242f3e\"\n        }]\n      }, {\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#242f3e\"\n        }]\n      }, {\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#746855\"\n        }]\n      }, {\n        featureType: \"administrative.locality\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#d59563\"\n        }]\n      }, {\n        featureType: \"poi\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#d59563\"\n        }]\n      }, {\n        featureType: \"poi.park\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#263c3f\"\n        }]\n      }, {\n        featureType: \"poi.park\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#6b9a76\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#38414e\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#212a37\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#9ca5b3\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#746855\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#1f2835\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#f3d19c\"\n        }]\n      }, {\n        featureType: \"transit\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#2f3948\"\n        }]\n      }, {\n        featureType: \"transit.station\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#d59563\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#17263c\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#515c6d\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#17263c\"\n        }]\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, props.markers.map(function (marker, index) {\n    var position = {\n      lat: marker.lat,\n      lng: marker.lng\n    };\n    return __jsx(Marker, {\n      key: index,\n      position: position,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 16\n      }\n    });\n  }), __jsx(MapDirectionsRenderer, {\n    places: props.markers,\n    travelMode: google.maps.TravelMode.DRIVING,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }));\n}));\n_c4 = Map;\nexport default Map;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MapDirectionsRenderer\");\n$RefreshReg$(_c2, \"Map$withScriptjs$withGoogleMap\");\n$RefreshReg$(_c3, \"Map$withScriptjs\");\n$RefreshReg$(_c4, \"Map\");","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Github/JgoWeb/component/map/googlemap.js"],"names":["React","useState","useEffect","withGoogleMap","GoogleMap","withScriptjs","Marker","DirectionsRenderer","MapDirectionsRenderer","props","directions","setDirections","error","setError","places","travelMode","waypoints","map","p","location","lat","lng","stopover","origin","shift","destination","pop","directionsService","google","maps","DirectionsService","route","result","status","DirectionsStatus","OK","Map","defaultCenter","defaultZoom","fullscreenControl","mapTypeControl","scaleControl","streetViewControl","styles","elementType","stylers","color","featureType","markers","marker","index","position","TravelMode","DRIVING"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  DirectionsRenderer,\r\n} from \"react-google-maps\";\r\nimport \"./config\";\r\n\r\nfunction MapDirectionsRenderer(props) {\r\n  const [directions, setDirections] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { places, travelMode } = props;\r\n\r\n    const waypoints = places.map((p) => ({\r\n      location: { lat: p.lat, lng: p.lng },\r\n      stopover: true,\r\n    }));\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n    const directionsService = new google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: travelMode,\r\n        waypoints: waypoints,\r\n      },\r\n      (result, status) => {\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          setDirections(result);\r\n        } else {\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return directions && <DirectionsRenderer directions={directions} />;\r\n}\r\n\r\nconst Map = withScriptjs(\r\n  withGoogleMap((props) => (\r\n    <GoogleMap\r\n      defaultCenter={props.defaultCenter}\r\n      defaultZoom={props.defaultZoom}\r\n      options={{\r\n        fullscreenControl: false,\r\n        mapTypeControl: false,\r\n        scaleControl: false,\r\n        streetViewControl: false,\r\n        styles: [\r\n          { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\r\n          {\r\n            elementType: \"labels.text.stroke\",\r\n            stylers: [{ color: \"#242f3e\" }],\r\n          },\r\n          { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\r\n          {\r\n            featureType: \"administrative.locality\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#d59563\" }],\r\n          },\r\n          {\r\n            featureType: \"poi\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#d59563\" }],\r\n          },\r\n          {\r\n            featureType: \"poi.park\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#263c3f\" }],\r\n          },\r\n          {\r\n            featureType: \"poi.park\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#6b9a76\" }],\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#38414e\" }],\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"geometry.stroke\",\r\n            stylers: [{ color: \"#212a37\" }],\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#9ca5b3\" }],\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#746855\" }],\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"geometry.stroke\",\r\n            stylers: [{ color: \"#1f2835\" }],\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#f3d19c\" }],\r\n          },\r\n          {\r\n            featureType: \"transit\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#2f3948\" }],\r\n          },\r\n          {\r\n            featureType: \"transit.station\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#d59563\" }],\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"geometry\",\r\n            stylers: [{ color: \"#17263c\" }],\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [{ color: \"#515c6d\" }],\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"labels.text.stroke\",\r\n            stylers: [{ color: \"#17263c\" }],\r\n          },\r\n        ],\r\n      }}\r\n    >\r\n      {props.markers.map((marker, index) => {\r\n        const position = { lat: marker.lat, lng: marker.lng };\r\n        return <Marker key={index} position={position}  />;\r\n      })}\r\n      <MapDirectionsRenderer\r\n        places={props.markers}\r\n        travelMode={google.maps.TravelMode.DRIVING}\r\n      />\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}