{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\nvar __jsx = React.createElement;\n\n/* global google */\nimport React, { Component, useState, useEffect } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, DirectionsRenderer } from \"react-google-maps\";\nimport \"./config\";\n\nfunction MapDirectionsRenderer(props) {\n  const place = coordinate;\n  const {\n    0: directions,\n    1: setDirections\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  useEffect(() => {\n    const {\n      places,\n      travelMode\n    } = props;\n    const waypoints = places.map(p => ({\n      location: {\n        lat: p.lat,\n        lng: p.lng\n      },\n      stopover: true\n    }));\n    const origin = waypoints.shift().location;\n    const destination = waypoints.pop().location;\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: travelMode,\n      waypoints: waypoints\n    }, (result, status) => {\n      console.log(result);\n\n      if (status === google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      } else {\n        setError(result);\n      }\n    });\n  });\n\n  if (error) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, error);\n  }\n\n  return directions && __jsx(DirectionsRenderer, {\n    directions: directions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default MapDirectionsRenderer;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","useState","useEffect","withGoogleMap","GoogleMap","withScriptjs","Marker","DirectionsRenderer","MapDirectionsRenderer","props","place","coordinate","directions","setDirections","error","setError","places","travelMode","waypoints","map","p","location","lat","lng","stopover","origin","shift","destination","pop","directionsService","google","maps","DirectionsService","route","result","status","console","log","DirectionsStatus","OK"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,kBALF,QAMO,mBANP;AAOA,OAAO,UAAP;;AAGA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,QAAMC,KAAK,GAAGC,UAAd;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BZ,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAA,OAACa,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEc,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAyBR,KAA/B;AAEA,UAAMS,SAAS,GAAGF,MAAM,CAACG,GAAP,CAAWC,CAAC,KAAK;AACjCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEF,CAAC,CAACE,GAAT;AAAcC,QAAAA,GAAG,EAAEH,CAAC,CAACG;AAArB,OADuB;AAEjCC,MAAAA,QAAQ,EAAE;AAFuB,KAAL,CAAZ,CAAlB;AAIA,UAAMC,MAAM,GAAGP,SAAS,CAACQ,KAAV,GAAkBL,QAAjC;AACA,UAAMM,WAAW,GAAGT,SAAS,CAACU,GAAV,GAAgBP,QAApC;AAEA,UAAMQ,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA1B;AACAH,IAAAA,iBAAiB,CAACI,KAAlB,CACE;AACER,MAAAA,MAAM,EAAEA,MADV;AAEEE,MAAAA,WAAW,EAAEA,WAFf;AAGEV,MAAAA,UAAU,EAAEA,UAHd;AAIEC,MAAAA,SAAS,EAAEA;AAJb,KADF,EAOE,CAACgB,MAAD,EAASC,MAAT,KAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,UAAIC,MAAM,KAAKL,MAAM,CAACC,IAAP,CAAYO,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C1B,QAAAA,aAAa,CAACqB,MAAD,CAAb;AACD,OAFD,MAEO;AACLnB,QAAAA,QAAQ,CAACmB,MAAD,CAAR;AACD;AACF,KAdH;AAgBD,GA3BQ,CAAT;;AA6BA,MAAIpB,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CAAP;AACD;;AACD,SACEF,UAAU,IACR,MAAC,kBAAD;AAAoB,IAAA,UAAU,EAAEA,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAKD;;AACD,eAAeJ,qBAAf","sourcesContent":["/* global google */\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  DirectionsRenderer,\r\n} from \"react-google-maps\";\r\nimport \"./config\";\r\n\r\n\r\nfunction MapDirectionsRenderer(props) {\r\n  const place = coordinate;\r\n  const [directions, setDirections] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { places, travelMode } = props;\r\n\r\n    const waypoints = places.map(p => ({\r\n      location: { lat: p.lat, lng: p.lng },\r\n      stopover: true\r\n    }));\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n    const directionsService = new google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: travelMode,\r\n        waypoints: waypoints\r\n      },\r\n      (result, status) => {\r\n        console.log(result)\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          setDirections(result);\r\n        } else {\r\n          setError(result);\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return (\r\n    directions && (\r\n      <DirectionsRenderer directions={directions} />\r\n    )\r\n  );\r\n}\r\nexport default MapDirectionsRenderer;"]},"metadata":{},"sourceType":"module"}