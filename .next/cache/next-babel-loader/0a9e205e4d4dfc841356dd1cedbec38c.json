{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\pages\\\\custommap.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nconst MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4&libraries=geometry,drawing,places\",\n  loadingElement: __jsx(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 25\n    }\n  }),\n  containerElement: __jsx(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 27\n    }\n  }),\n  mapElement: __jsx(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  })\n}), lifecycle({\n  componentWillMount() {\n    Geocode.setApiKey(\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\");\n    const refs = {};\n    this.setState({\n      position: null,\n      onMarkerMounted: ref => {\n        refs.marker = ref;\n      },\n      onPositionChanged: () => {\n        const position = refs.marker.getPosition();\n        console.log(position.lat());\n        Geocode.fromLatLng(position.lat(), position.lng()).then(response => {\n          const address = response.results[0].formatted_address;\n          console.log(address);\n          global.config.place.deliver.pickoff = address;\n          global.config.place.deliver.pickofflat = position.lat();\n          global.config.place.deliver.dropofflang = position.lng();\n        }, error => {\n          console.error(error);\n        });\n      }\n    });\n  }\n\n}), withScriptjs, withGoogleMap)(props => __jsx(GoogleMap, {\n  defaultZoom: 12,\n  defaultCenter: {\n    lat: 14.6091,\n    lng: 121.0223\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, props.isMarkerShown && __jsx(Marker, {\n  position: {\n    lat: 14.6091,\n    lng: 121.0223\n  },\n  draggable: true,\n  ref: props.onMarkerMounted,\n  onPositionChanged: props.onPositionChanged,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 33\n  }\n})));\n\nclass custommap extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isMarkerShown: false\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, __jsx(MyMapComponent, {\n      isMarkerShown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\"\n})(MainMap);","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/pages/custommap.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","MyMapComponent","compose","withProps","googleMapURL","loadingElement","height","containerElement","mapElement","lifecycle","componentWillMount","Geocode","setApiKey","refs","setState","position","onMarkerMounted","ref","marker","onPositionChanged","getPosition","console","log","lat","fromLatLng","lng","then","response","address","results","formatted_address","global","config","place","deliver","pickoff","pickofflat","dropofflang","error","withScriptjs","withGoogleMap","props","isMarkerShown","custommap","PureComponent","render","apiKey","MainMap"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nconst MyMapComponent = compose(\r\n    withProps({\r\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4&libraries=geometry,drawing,places\",\r\n        loadingElement: <div style={{ height: `100%` }} />,\r\n        containerElement: <div style={{ height: `400px` }} />,\r\n        mapElement: <div style={{ height: `100%` }} />,\r\n    }),\r\n    lifecycle({\r\n        componentWillMount() {\r\n            Geocode.setApiKey(\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\");\r\n            const refs = {}\r\n\r\n            this.setState({\r\n                position: null,\r\n                onMarkerMounted: ref => {\r\n                    refs.marker = ref;\r\n                },\r\n                onPositionChanged: () => {\r\n                    const position = refs.marker.getPosition();\r\n                    \r\n                    console.log(position.lat());\r\n                    Geocode.fromLatLng(position.lat(), position.lng()).then(\r\n                        response => {\r\n                          const address = response.results[0].formatted_address;\r\n                          console.log(address);\r\n                          global.config.place.deliver.pickoff = address;\r\n                          global.config.place.deliver.pickofflat = position.lat();\r\n                          global.config.place.deliver.dropofflang = position.lng();\r\n                        },\r\n                        error => {\r\n                          console.error(error);\r\n                        }\r\n                      );\r\n                }\r\n            })  \r\n            \r\n        },\r\n    }),\r\n    withScriptjs,\r\n    withGoogleMap\r\n)((props) =>\r\n    <GoogleMap defaultZoom={12} defaultCenter={{ lat: 14.6091, lng: 121.0223 }}>\r\n        {props.isMarkerShown && <Marker position={{ lat: 14.6091, lng: 121.0223 }} draggable={true} ref={props.onMarkerMounted} onPositionChanged={props.onPositionChanged} />}\r\n    </GoogleMap>\r\n    )\r\n\r\nclass custommap extends React.PureComponent {\r\n    state = {\r\n        isMarkerShown: false,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MyMapComponent isMarkerShown={true} />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: (\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\")\r\n})(MainMap);"]},"metadata":{},"sourceType":"module"}