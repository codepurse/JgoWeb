{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Github\\\\JgoWeb\\\\component\\\\deliver.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from \"react\";\nimport \"../component/map/config\";\nimport GooglePlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-google-places-autocomplete\";\nimport Custommap from \"../component/custommap\";\nimport swal from \"@sweetalert/with-react\";\nimport { useRouter } from \"next/router\";\nexport default function App() {\n  const router = useRouter();\n  var click;\n\n  function getAdd() {\n    if (click === 0) {\n      coordinates.lat = global.config.place.deliver.pickofflat;\n      coordinates.lng = global.config.place.deliver.dropofflang;\n      setAddress({\n        value: global.config.place.deliver.pickoff,\n        label: global.config.place.deliver.pickoff\n      });\n    } else {\n      setAddressDrop({\n        value: global.config.place.deliver.pickoff,\n        label: global.config.place.deliver.pickoff\n      });\n      coordinatesDrop.lat = global.config.place.deliver.pickofflat;\n      coordinatesDrop.lng = global.config.place.deliver.dropofflang;\n    }\n\n    swal.close();\n  }\n\n  function clickSubmit(e) {\n    if (address === \"\" || addressDrop === \"\") {\n      swal(__jsx(\"div\", {\n        style: {\n          width: \"450px\",\n          padding: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"row align-items-center\",\n        style: {\n          borderLeft: \"3px solid #c62828\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, __jsx(\"img\", {\n        src: \"Image/warning.png\",\n        style: {\n          width: \"32px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      })), __jsx(\"div\", {\n        className: \"col-lg-10\",\n        style: {\n          textAlign: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, __jsx(\"p\", {\n        className: \"pError\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, \"Error\"), __jsx(\"p\", {\n        className: \"pErrorSub\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, \"Please enter a valid address in both textbox\", \" \"))))));\n    } else {\n      const origin = {\n        lat: coordinates.lat,\n        lng: coordinates.lng,\n        id: \"1\"\n      };\n      coordinate.push(origin);\n      const destination = {\n        lat: coordinatesDrop.lat,\n        lng: coordinatesDrop.lng,\n        id: \"2\"\n      };\n      coordinate.push(destination);\n      console.log(coordinate);\n      localStorage.setItem(\"address\", address.label);\n      localStorage.setItem(\"addressDrop\", addressDrop.label);\n      localStorage.setItem(\"pickofflat\", coordinates.lat);\n      localStorage.setItem(\"pickofflng\", coordinates.lng);\n      localStorage.setItem(\"dropofflat\", coordinatesDrop.lat);\n      localStorage.setItem(\"dropofflng\", coordinatesDrop.lng);\n      global.config.place.deliver.pickoff = address.label;\n      global.config.place.deliver.dropoff = addressDrop.label;\n      global.config.place.deliver.pickofflat = coordinatesDrop.lat;\n      global.config.place.deliver.pickofflang = coordinatesDrop.lng;\n      global.config.place.deliver.dropofflat = coordinatesDrop.lat;\n      global.config.place.deliver.dropofflang = coordinatesDrop.lng;\n      global.config.place.deliver.refresh = 1;\n      router.push(\"/map\");\n    }\n  }\n\n  const [address, setAddress] = React.useState(\"\");\n  const [addressDrop, setAddressDrop] = React.useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null\n  });\n  const [coordinatesDrop, setCoordinatesDrop] = React.useState({\n    lat: null,\n    lng: null\n  });\n\n  const handleChange = async value => {\n    const results = await geocodeByAddress(value.label);\n    const latLng = await getLatLng(results[0]);\n    var str = value.label;\n    var n = str.includes(\"Metro Manila\");\n    setAddress(value);\n    setCoordinates(latLng);\n\n    if (n === true) {\n      console.log(true);\n    } else {\n      console.log(\"false\");\n    }\n  };\n\n  const handleChangeDrop = async value => {\n    const results = await geocodeByAddress(value.label);\n    const latLng = await getLatLng(results[0]);\n    setAddressDrop(value);\n    setCoordinatesDrop(latLng);\n  };\n\n  function opensweetalert() {\n    swal(__jsx(\"div\", {\n      style: {\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        position: \"relative\",\n        width: \"800px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      className: \"pDrag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, \"Drag the marker to set location\"), __jsx(\"button\", {\n      className: \"btnDone\",\n      onClick: getAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, \"Done\"), __jsx(Custommap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  return __jsx(\"div\", {\n    className: \"col-lg-6 colDeliver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: \"pTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Book your delivery now!\"), __jsx(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"form-inline\",\n    onClick: () => click = 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, __jsx(GooglePlacesAutocomplete, {\n    selectProps: {\n      value: address,\n      instanceId: \"1\",\n      onChange: handleChange\n    },\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"ph\"]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), __jsx(\"img\", {\n    src: \"Image/google-maps.png\",\n    className: \"img-fluid imgMap\",\n    onClick: opensweetalert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"form-inline\",\n    onClick: () => click = 1,\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, __jsx(GooglePlacesAutocomplete, {\n    selectProps: {\n      instanceId: \"2\",\n      value: addressDrop,\n      onChange: handleChangeDrop\n    },\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"ph\"]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }), __jsx(\"img\", {\n    src: \"Image/google-maps.png\",\n    className: \"img-fluid imgMap\",\n    onClick: opensweetalert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }))), __jsx(\"input\", {\n    type: \"button\",\n    className: \"btnSubmit\",\n    value: \"SUBMIT\",\n    onClick: clickSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Github/JgoWeb/component/deliver.js"],"names":["React","Component","useState","GooglePlacesAutocomplete","geocodeByAddress","getLatLng","Custommap","swal","useRouter","App","router","click","getAdd","coordinates","lat","global","config","place","deliver","pickofflat","lng","dropofflang","setAddress","value","pickoff","label","setAddressDrop","coordinatesDrop","close","clickSubmit","e","address","addressDrop","width","padding","borderLeft","textAlign","origin","id","coordinate","push","destination","console","log","localStorage","setItem","dropoff","pickofflang","dropofflat","refresh","setCoordinates","setCoordinatesDrop","handleChange","results","latLng","str","n","includes","handleChangeDrop","opensweetalert","borderRadius","overflow","position","instanceId","onChange","componentRestrictions","country","marginTop"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport \"../component/map/config\";\r\nimport GooglePlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-google-places-autocomplete\";\r\nimport Custommap from \"../component/custommap\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport { useRouter } from \"next/router\";\r\nexport default function App() {\r\n  const router = useRouter();\r\n  var click;\r\n\r\n  function getAdd() {\r\n    if (click === 0) {\r\n      coordinates.lat = global.config.place.deliver.pickofflat;\r\n      coordinates.lng = global.config.place.deliver.dropofflang;\r\n      setAddress({\r\n        value: global.config.place.deliver.pickoff,\r\n        label: global.config.place.deliver.pickoff,\r\n      });\r\n    } else {\r\n      setAddressDrop({\r\n        value: global.config.place.deliver.pickoff,\r\n        label: global.config.place.deliver.pickoff,\r\n      });\r\n      coordinatesDrop.lat = global.config.place.deliver.pickofflat;\r\n      coordinatesDrop.lng = global.config.place.deliver.dropofflang;\r\n    }\r\n    swal.close();\r\n  }\r\n\r\n  function clickSubmit(e) {\r\n    if (address === \"\" || addressDrop === \"\") {\r\n      swal(\r\n        <div style={{ width: \"450px\", padding: \"10px\" }}>\r\n          <div className=\"container\">\r\n            <div\r\n              className=\"row align-items-center\"\r\n              style={{ borderLeft: \"3px solid #c62828\"}}\r\n            >\r\n              <div className=\"col-lg-2\">\r\n                <img src=\"Image/warning.png\" style={{ width: \"32px\" }}></img>\r\n              </div>\r\n              <div className=\"col-lg-10\" style={{ textAlign: \"left\" }}>\r\n                <p className=\"pError\">Error</p>\r\n                <p className=\"pErrorSub\">\r\n                  Please enter a valid address in both textbox{\" \"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      const origin = {\r\n        lat: coordinates.lat,\r\n        lng: coordinates.lng,\r\n        id: \"1\",\r\n      };\r\n      coordinate.push(origin);\r\n      const destination = {\r\n        lat: coordinatesDrop.lat,\r\n        lng: coordinatesDrop.lng,\r\n        id: \"2\",\r\n      };\r\n      coordinate.push(destination);\r\n      console.log(coordinate);\r\n\r\n      localStorage.setItem(\"address\", address.label);\r\n      localStorage.setItem(\"addressDrop\", addressDrop.label);\r\n      localStorage.setItem(\"pickofflat\", coordinates.lat);\r\n      localStorage.setItem(\"pickofflng\", coordinates.lng);\r\n      localStorage.setItem(\"dropofflat\", coordinatesDrop.lat);\r\n      localStorage.setItem(\"dropofflng\", coordinatesDrop.lng);\r\n\r\n      global.config.place.deliver.pickoff = address.label;\r\n      global.config.place.deliver.dropoff = addressDrop.label;\r\n\r\n      global.config.place.deliver.pickofflat = coordinatesDrop.lat;\r\n      global.config.place.deliver.pickofflang = coordinatesDrop.lng;\r\n\r\n      global.config.place.deliver.dropofflat = coordinatesDrop.lat;\r\n      global.config.place.deliver.dropofflang = coordinatesDrop.lng;\r\n      global.config.place.deliver.refresh = 1;\r\n      router.push(\"/map\");\r\n    }\r\n  }\r\n\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [addressDrop, setAddressDrop] = React.useState(\"\");\r\n  const [coordinates, setCoordinates] = React.useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n  const [coordinatesDrop, setCoordinatesDrop] = React.useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n\r\n  const handleChange = async (value) => {\r\n    const results = await geocodeByAddress(value.label);\r\n    const latLng = await getLatLng(results[0]);\r\n    var str = value.label;\r\n    var n = str.includes(\"Metro Manila\");\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n\r\n    if (n === true) {\r\n      console.log(true);\r\n    }\r\n    else {\r\n      console.log(\"false\");\r\n    }\r\n  };\r\n\r\n  const handleChangeDrop = async (value) => {\r\n    const results = await geocodeByAddress(value.label);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddressDrop(value);\r\n    setCoordinatesDrop(latLng);\r\n  };\r\n\r\n  function opensweetalert() {\r\n    swal(\r\n      <div\r\n        style={{\r\n          borderRadius: \"10px\",\r\n          overflow: \"hidden\",\r\n          position: \"relative\",\r\n          width: \"800px\",\r\n        }}\r\n      >\r\n        <p className=\"pDrag\">Drag the marker to set location</p>\r\n        <button className=\"btnDone\" onClick={getAdd}>\r\n          Done\r\n        </button>\r\n        <Custommap></Custommap>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-lg-6 colDeliver\">\r\n      <p className=\"pTitle\">Book your delivery now!</p>\r\n      <div className=\"box\">\r\n        <div className=\"form-inline\" onClick={() => (click = 0)}>\r\n          <GooglePlacesAutocomplete\r\n            selectProps={{\r\n              value: address,\r\n              instanceId: \"1\",\r\n              onChange: handleChange,\r\n            }}\r\n            autocompletionRequest={{\r\n              componentRestrictions: {\r\n                country: [\"ph\"],\r\n              },\r\n            }}\r\n          />\r\n          <img\r\n            src=\"Image/google-maps.png\"\r\n            className=\"img-fluid imgMap\"\r\n            onClick={opensweetalert}\r\n          ></img>\r\n        </div>\r\n        <div\r\n          className=\"form-inline\"\r\n          onClick={() => (click = 1)}\r\n          style={{ marginTop: \"10px\" }}\r\n        >\r\n          <GooglePlacesAutocomplete\r\n            selectProps={{\r\n              instanceId: \"2\",\r\n              value: addressDrop,\r\n              onChange: handleChangeDrop,\r\n            }}\r\n            autocompletionRequest={{\r\n              componentRestrictions: {\r\n                country: [\"ph\"],\r\n              },\r\n            }}\r\n          />\r\n          <img\r\n            src=\"Image/google-maps.png\"\r\n            className=\"img-fluid imgMap\"\r\n            onClick={opensweetalert}\r\n          ></img>\r\n        </div>\r\n      </div>\r\n\r\n      <input\r\n        type=\"button\"\r\n        className=\"btnSubmit\"\r\n        value=\"SUBMIT\"\r\n        onClick={clickSubmit}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}