{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\custommap.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport { Map, TileLayer, Popup, Marker, withLeaflet } from \"react-leaflet\";\nlet RL = false;\n\nif (process.env.BROWSER) {\n  RL = require('react-leaflet');\n  Map = RL.Map;\n  TileLayer = RL.TileLayer;\n  Marker = RL.Marker;\n  Popup = RL.Popup;\n}\n\nconst MyMarker = props => {\n  const initMarker = ref => {\n    if (ref) {\n      ref.leafletElement.openPopup();\n    }\n  };\n\n  return __jsx(Marker, _extends({\n    ref: initMarker\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }));\n};\n\nclass MapExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPos: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({\n      currentPos: e.latlng\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, __jsx(Map, {\n      center: this.props.center,\n      zoom: this.props.zoom,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, __jsx(TileLayer, {\n      url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), this.state.currentPos && __jsx(MyMarker, {\n      position: this.state.currentPos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 38\n      }\n    }, __jsx(Popup, {\n      position: this.state.currentPos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Current location: \", __jsx(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, JSON.stringify(this.state.currentPos, null, 2))))));\n  }\n\n}\n\nexport default MapExample;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/custommap.js"],"names":["React","Component","Map","TileLayer","Popup","Marker","withLeaflet","RL","process","env","BROWSER","require","MyMarker","props","initMarker","ref","leafletElement","openPopup","MapExample","constructor","state","currentPos","handleClick","bind","e","setState","latlng","render","center","zoom","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,WAAvC,QAAyD,eAAzD;AAGA,IAAIC,EAAE,GAAG,KAAT;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,OAAhB,EAAyB;AACvBH,EAAAA,EAAE,GAAGI,OAAO,CAAC,eAAD,CAAZ;AACAT,EAAAA,GAAG,GAAGK,EAAE,CAACL,GAAT;AACAC,EAAAA,SAAS,GAAGI,EAAE,CAACJ,SAAf;AACAE,EAAAA,MAAM,GAAGE,EAAE,CAACF,MAAZ;AACAD,EAAAA,KAAK,GAAGG,EAAE,CAACH,KAAX;AACD;;AAID,MAAMQ,QAAQ,GAAGC,KAAK,IAAI;AAExB,QAAMC,UAAU,GAAGC,GAAG,IAAI;AACxB,QAAIA,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACC,cAAJ,CAAmBC,SAAnB;AACD;AACF,GAJD;;AAMA,SAAO,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEH;AAAb,KAA6BD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CATD;;AAcA,MAAMK,UAAN,SAAyBjB,SAAzB,CAAmC;AACjCkB,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKO,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAGDD,EAAAA,WAAW,CAACE,CAAD,EAAG;AACZ,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,UAAU,EAAEG,CAAC,CAACE;AAAhB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWe,MAAxB;AAAgC,MAAA,IAAI,EAAE,KAAKf,KAAL,CAAWgB,IAAjD;AAAuD,MAAA,OAAO,EAAE,KAAKP,WAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AACI,MAAA,GAAG,EAAC,0CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAII,KAAKF,KAAL,CAAWC,UAAX,IAAyB,MAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACzB,MAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMS,IAAI,CAACC,SAAL,CAAe,KAAKX,KAAL,CAAWC,UAA1B,EAAsC,IAAtC,EAA4C,CAA5C,CAAN,CADpB,CADyB,CAJ7B,CADF,CADF;AAcD;;AA7BgC;;AAgCnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Map, TileLayer, Popup, Marker, withLeaflet} from \"react-leaflet\";\r\n\r\n\r\nlet RL = false;\r\nif (process.env.BROWSER) {\r\n  RL = require('react-leaflet');\r\n  Map = RL.Map;\r\n  TileLayer = RL.TileLayer;\r\n  Marker = RL.Marker;\r\n  Popup = RL.Popup;\r\n}\r\n\r\n\r\n\r\nconst MyMarker = props => {\r\n\r\n  const initMarker = ref => {\r\n    if (ref) {\r\n      ref.leafletElement.openPopup()\r\n    }\r\n  }\r\n\r\n  return <Marker ref={initMarker} {...props}/>\r\n}\r\n\r\n\r\n\r\n\r\nclass MapExample extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPos: null\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n\r\n  handleClick(e){\r\n    this.setState({ currentPos: e.latlng });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map center={this.props.center} zoom={this.props.zoom} onClick={this.handleClick}>\r\n          <TileLayer\r\n              url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n          />\r\n          { this.state.currentPos && <MyMarker position={this.state.currentPos}>\r\n            <Popup position={this.state.currentPos}>\r\n              Current location: <pre>{JSON.stringify(this.state.currentPos, null, 2)}</pre>\r\n            </Popup>\r\n          </MyMarker>}\r\n        </Map>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapExample;\r\n"]},"metadata":{},"sourceType":"module"}