{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* global google */\nimport React from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, DirectionsRenderer } from \"react-google-maps\";\nconst {\n  places,\n  travelMode\n} = this.props;\nconst waypoints = places.map(p => ({\n  location: {\n    lat: p.lat,\n    lng: p.lng\n  },\n  stopover: true\n}));\nconst origin = waypoints.shift().location;\nconst destination = waypoints.pop().location;\n\nclass MapDirectionsRenderer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      directions: null,\n      error: null\n    });\n  }\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: travelMode,\n      waypoints: waypoints\n    }, (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK) {\n        this.setState({\n          directions: result\n        });\n      } else {\n        this.setState({\n          error: result\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }\n      }, this.state.error);\n    }\n\n    return this.state.directions && __jsx(DirectionsRenderer, {\n      directions: this.state.directions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }\n    });\n  }\n\n}\n\nconst Map = withScriptjs(withGoogleMap(props => __jsx(GoogleMap, {\n  defaultCenter: props.defaultCenter,\n  defaultZoom: props.defaultZoom,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }\n}, props.markers.map((marker, index) => {\n  const position = {\n    lat: marker.lat,\n    lng: marker.lng\n  };\n  return __jsx(Marker, {\n    key: index,\n    position: position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }\n  });\n}), __jsx(MapDirectionsRenderer, {\n  places: props.markers,\n  travelMode: google.maps.TravelMode.DRIVING,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }\n}))));\nexport default Map;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","withGoogleMap","GoogleMap","withScriptjs","Marker","DirectionsRenderer","places","travelMode","props","waypoints","map","p","location","lat","lng","stopover","origin","shift","destination","pop","MapDirectionsRenderer","Component","directions","error","componentDidUpdate","componentDidMount","directionsService","google","maps","DirectionsService","route","result","status","DirectionsStatus","OK","setState","render","state","Map","defaultCenter","defaultZoom","markers","marker","index","position","TravelMode","DRIVING"],"mappings":"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","sourcesContent":["/* global google */\r\nimport React from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  DirectionsRenderer\r\n} from \"react-google-maps\";\r\n\r\n\r\nconst { places, travelMode } = this.props;\r\n    \r\nconst waypoints = places.map(p =>({\r\n    location: {lat: p.lat, lng:p.lng},\r\n    stopover: true\r\n}))\r\nconst origin = waypoints.shift().location;\r\nconst destination = waypoints.pop().location;\r\n\r\nclass MapDirectionsRenderer extends React.Component {\r\n  state = {\r\n    directions: null,\r\n    error: null\r\n  };\r\n\r\n  \r\n\r\n  componentDidUpdate() {\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n    \r\n    \r\n\r\n    const directionsService = new google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: travelMode,\r\n        waypoints: waypoints\r\n      },\r\n      (result, status) => {\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          this.setState({\r\n            directions: result\r\n          });\r\n        } else {\r\n          this.setState({ error: result });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <h1>{this.state.error}</h1>;\r\n    }\r\n    return (this.state.directions && <DirectionsRenderer directions={this.state.directions} />)\r\n  }\r\n}\r\n\r\nconst Map = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap\r\n      defaultCenter={props.defaultCenter}\r\n      defaultZoom={props.defaultZoom}\r\n    >\r\n      {props.markers.map((marker, index) => {\r\n        const position = { lat: marker.lat, lng: marker.lng};\r\n        return <Marker key={index} position={position} />;\r\n      })}\r\n      <MapDirectionsRenderer\r\n        places={props.markers}\r\n        travelMode={google.maps.TravelMode.DRIVING}\r\n      />\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}