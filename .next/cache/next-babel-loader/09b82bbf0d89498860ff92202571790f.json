{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Github\\\\JgoWeb\\\\pages\\\\register.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nexport var register = /*#__PURE__*/function (_Component) {\n  _inherits(register, _Component);\n\n  var _super = _createSuper(register);\n\n  function register(props) {\n    var _this;\n\n    _classCallCheck(this, register);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      fname: \"\",\n      lname: \"\",\n      mname: \"\",\n      profile: \"\",\n      email: \"\",\n      mobile: \"\",\n      address: \"asd\",\n      city: \"asd\",\n      states: \"asd\",\n      country: \"asd\",\n      zip: \"12312\",\n      password: \"\"\n    });\n\n    _this.fname = _this.fname.bind(_assertThisInitialized(_this));\n    _this.lname = _this.lname.bind(_assertThisInitialized(_this));\n    _this.mname = _this.mname.bind(_assertThisInitialized(_this));\n    _this.email = _this.email.bind(_assertThisInitialized(_this));\n    _this.mobile = _this.mobile.bind(_assertThisInitialized(_this));\n    _this.address = _this.address.bind(_assertThisInitialized(_this));\n    _this.city = _this.city.bind(_assertThisInitialized(_this));\n    _this.states = _this.states.bind(_assertThisInitialized(_this));\n    _this.country = _this.country.bind(_assertThisInitialized(_this));\n    _this.zip = _this.zip.bind(_assertThisInitialized(_this));\n    _this.password = _this.password.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(register, [{\n    key: \"email\",\n    value: function email(event) {\n      this.setState({\n        email: event.target.value\n      });\n    }\n  }, {\n    key: \"lname\",\n    value: function lname(event) {\n      this.setState({\n        lname: event.target.value\n      });\n      console.log(this.state.lname);\n    }\n  }, {\n    key: \"fname\",\n    value: function fname(event) {\n      this.setState({\n        fname: event.target.value\n      });\n    }\n  }, {\n    key: \"mname\",\n    value: function mname(event) {\n      this.setState({\n        mname: event.target.value\n      });\n    }\n  }, {\n    key: \"password\",\n    value: function password(event) {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      var options = {\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"content-type\": \"application/json\"\n        }\n      };\n      var apiUrl = \"http://localhost:8000/api/auth/register\";\n      var data = {\n        fname: \"Asdas\",\n        lname: \"Asdas\",\n        mname: \"Asdas\",\n        profile_pic: \"\",\n        email: \"Asdas@gmail.com\",\n        mobile_no: \"123123\",\n        address: \"Asdas\",\n        city: \"Asdas\",\n        state: \"Asdas\",\n        country: \"Asdas\",\n        zip: \"Asdas\",\n        password: \"Asdas\",\n        password_confirmation: \"Asdas\"\n      };\n      axios.post(apiUrl, data, options).then(function (result) {\n        if (result.status == \"201\") {\n          alert(\"account created successfully\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.fname,\n        placeholder: \"first name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.lname,\n        placeholder: \"last name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.mname,\n        placeholder: \"middle name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.email,\n        placeholder: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.mobile,\n        placeholder: \"mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 16\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.address,\n        placeholder: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 16\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.city,\n        placeholder: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.states,\n        placeholder: \"state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.country,\n        placeholder: \"country\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 16\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.zip,\n        placeholder: \"zip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.password,\n        placeholder: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.password_confirmation,\n        placeholder: \"password confirmation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 16\n        }\n      }), __jsx(\"input\", {\n        type: \"button\",\n        value: \"register\",\n        onClick: this.login.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, this.state.lname)))));\n    }\n  }]);\n\n  return register;\n}(Component);\nexport default register;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Github/JgoWeb/pages/register.js"],"names":["React","Component","useState","axios","register","props","fname","lname","mname","profile","email","mobile","address","city","states","country","zip","password","bind","event","setState","target","value","console","log","state","options","headers","Accept","apiUrl","data","profile_pic","mobile_no","password_confirmation","post","then","result","status","alert","login"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport class register extends Component {\r\n  state = {\r\n    fname: \"\",\r\n    lname: \"\",\r\n    mname: \"\",\r\n    profile: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    address: \"asd\",\r\n    city: \"asd\",\r\n    states: \"asd\",\r\n    country: \"asd\",\r\n    zip: \"12312\",\r\n    password: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.fname = this.fname.bind(this);\r\n    this.lname = this.lname.bind(this);\r\n    this.mname = this.mname.bind(this);\r\n    this.email = this.email.bind(this);\r\n    this.mobile = this.mobile.bind(this);\r\n    this.address = this.address.bind(this);\r\n    this.city = this.city.bind(this);\r\n    this.states = this.states.bind(this);\r\n    this.country = this.country.bind(this);\r\n    this.zip = this.zip.bind(this);\r\n    this.password = this.password.bind(this);\r\n  }\r\n\r\n  email(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n  lname(event) {\r\n    this.setState({ lname: event.target.value });\r\n    console.log(this.state.lname);\r\n  }\r\n  fname(event) {\r\n    this.setState({ fname: event.target.value });\r\n  }\r\n  mname(event) {\r\n    this.setState({ mname: event.target.value });\r\n  }\r\n  password(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  login() {\r\n    const options = {\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const apiUrl = \"http://localhost:8000/api/auth/register\";\r\n    const data = {\r\n      fname: \"Asdas\",\r\n      lname: \"Asdas\",\r\n      mname: \"Asdas\",\r\n      profile_pic: \"\",\r\n      email: \"Asdas@gmail.com\",\r\n      mobile_no: \"123123\",\r\n      address: \"Asdas\",\r\n      city: \"Asdas\",\r\n      state: \"Asdas\",\r\n      country: \"Asdas\",\r\n      zip: \"Asdas\",\r\n      password: \"Asdas\",\r\n      password_confirmation: \"Asdas\",\r\n    };\r\n    axios.post(apiUrl, data, options).then((result) => {\r\n      if (result.status == \"201\") {\r\n        alert(\"account created successfully\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.fname}\r\n                placeholder=\"first name\"\r\n              ></input>\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.lname}\r\n                placeholder=\"last name\"\r\n              ></input>\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.mname}\r\n                placeholder=\"middle name\"\r\n              ></input>\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.email}\r\n                placeholder=\"email\"\r\n              ></input>\r\n               <input\r\n                type=\"text\"\r\n                onChange={this.mobile}\r\n                placeholder=\"mobile\"\r\n              ></input>\r\n               <input\r\n                type=\"text\"\r\n                onChange={this.address}\r\n                placeholder=\"address\"\r\n              ></input>\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.city}\r\n                placeholder=\"city\"\r\n              ></input>\r\n               <input\r\n                type=\"text\"\r\n                onChange={this.states}\r\n                placeholder=\"state\"\r\n              ></input>\r\n               <input\r\n                type=\"text\"\r\n                onChange={this.country}\r\n                placeholder=\"country\"\r\n              ></input>\r\n               <input\r\n                type=\"text\"\r\n                onChange={this.zip}\r\n                placeholder=\"zip\"\r\n              ></input>\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.password}\r\n                placeholder=\"password\"\r\n              ></input>\r\n               <input\r\n                type=\"text\"\r\n                onChange={this.password_confirmation}\r\n                placeholder=\"password confirmation\"\r\n              ></input>\r\n              <input\r\n                type=\"button\"\r\n                value=\"register\"\r\n                onClick={this.login.bind(this)}\r\n              ></input>\r\n              <p>{this.state.lname}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default register;\r\n"]},"metadata":{},"sourceType":"module"}