{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\leafletmap.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport { Map, TileLayer, Popup, Marker, withLeaflet } from \"react-leaflet\";\n\nconst MyMarker = props => {\n  const initMarker = ref => {\n    if (ref) {\n      ref.leafletElement.openPopup();\n    }\n  };\n\n  return __jsx(Marker, _extends({\n    ref: initMarker\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }));\n};\n\nclass MapExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPos: null,\n      key: 1\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleClick(e) {\n    console.log(e.latlng.lat);\n    console.log(e.latlng.lng);\n    this.setState({\n      currentPos: e.latlng\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, __jsx(Map, {\n      center: this.props.center,\n      zoom: this.props.zoom,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, __jsx(TileLayer, {\n      url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), this.state.currentPos && __jsx(MyMarker, {\n      position: this.state.currentPos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, __jsx(Popup, {\n      position: this.state.currentPos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Current location:\", \" \", __jsx(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state.currentPos, null, 2))))));\n  }\n\n}\n\nexport default MapExample;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/leafletmap.js"],"names":["React","Component","Map","TileLayer","Popup","Marker","withLeaflet","MyMarker","props","initMarker","ref","leafletElement","openPopup","MapExample","constructor","state","currentPos","key","handleClick","bind","componentDidMount","e","console","log","latlng","lat","lng","setState","render","center","zoom","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,WAAxC,QAA2D,eAA3D;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,UAAU,GAAIC,GAAD,IAAS;AAC1B,QAAIA,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACC,cAAJ,CAAmBC,SAAnB;AACD;AACF,GAJD;;AAMA,SAAO,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEH;AAAb,KAA6BD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CARD;;AAUA,MAAMK,UAAN,SAAyBZ,SAAzB,CAAmC;AACjCa,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKO,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,IADD;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDF,EAAAA,WAAW,CAACG,CAAD,EAAI;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,GAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASE,GAArB;AACA,SAAKC,QAAL,CAAc;AAAEX,MAAAA,UAAU,EAAEK,CAAC,CAACG;AAAhB,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWqB,MADrB;AAEE,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWsB,IAFnB;AAGE,MAAA,OAAO,EAAE,KAAKZ,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,MAAC,SAAD;AAAW,MAAA,GAAG,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMG,KAAKH,KAAL,CAAWC,UAAX,IACC,MAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACoB,GADpB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMe,IAAI,CAACC,SAAL,CAAe,KAAKjB,KAAL,CAAWC,UAA1B,EAAsC,IAAtC,EAA4C,CAA5C,CAAN,CAFF,CADF,CAPJ,CADF,CADF;AAmBD;;AAxCgC;;AA2CnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Map, TileLayer, Popup, Marker, withLeaflet } from \"react-leaflet\";\r\n\r\nconst MyMarker = (props) => {\r\n  const initMarker = (ref) => {\r\n    if (ref) {\r\n      ref.leafletElement.openPopup();\r\n    }\r\n  };\r\n\r\n  return <Marker ref={initMarker} {...props} />;\r\n};\r\n\r\nclass MapExample extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPos: null,\r\n      key: 1\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n   \r\n  }\r\n\r\n  handleClick(e) {\r\n    console.log(e.latlng.lat);\r\n    console.log(e.latlng.lng);\r\n    this.setState({ currentPos: e.latlng });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map\r\n          center={this.props.center}\r\n          zoom={this.props.zoom}\r\n          onClick={this.handleClick}\r\n        >\r\n          <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\r\n          {this.state.currentPos && (\r\n            <MyMarker position={this.state.currentPos}>\r\n              <Popup position={this.state.currentPos}>\r\n                Current location:{\" \"}\r\n                <pre>{JSON.stringify(this.state.currentPos, null, 2)}</pre>\r\n              </Popup>\r\n            </MyMarker>\r\n          )}\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapExample;\r\n"]},"metadata":{},"sourceType":"module"}