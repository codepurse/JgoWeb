{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\nvar __jsx = React.createElement;\n\n/* global google */\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport Head from \"next/head\";\nimport \"./config\";\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMapReady = this.handleMapReady.bind(this);\n  }\n\n  handleMapReady(mapProps, map) {\n    this.calculateAndDisplayRoute(map);\n  }\n\n  componentDidUpdate() {\n    console.log(places);\n    Map.click();\n  }\n\n  componentDidMount() {}\n\n  calculateAndDisplayRoute(map) {\n    const directionsService = new google.maps.DirectionsService();\n    const directionsDisplay = new google.maps.DirectionsRenderer();\n    directionsDisplay.setMap(map);\n    const waypoints = this.props.data.map(item => {\n      return {\n        location: {\n          lat: item.lat,\n          lng: item.lng\n        },\n        stopover: true\n      };\n    });\n    const origin = waypoints.shift().location;\n    const destination = waypoints.pop().location;\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      waypoints: waypoints,\n      travelMode: \"DRIVING\"\n    }, (response, status) => {\n      if (status === \"OK\") {\n        directionsDisplay.setDirections(response);\n      } else {\n        window.alert(\"Directions request failed due to \" + status);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, __jsx(Map, {\n      google: this.props.google,\n      className: \"map\",\n      zoom: 14,\n      initialCenter: {\n        lat: 14.5995,\n        lng: 120.9842\n      },\n      onClick: this.handleMapReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\",\n  libraries: []\n})(MapContainer);","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","Map","GoogleApiWrapper","Head","MapContainer","constructor","props","handleMapReady","bind","mapProps","map","calculateAndDisplayRoute","componentDidUpdate","console","log","places","click","componentDidMount","directionsService","google","maps","DirectionsService","directionsDisplay","DirectionsRenderer","setMap","waypoints","data","item","location","lat","lng","stopover","origin","shift","destination","pop","route","travelMode","response","status","setDirections","window","alert","render","apiKey","libraries"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,UAAP;;AACA,MAAMC,YAAN,SAA2BL,KAAK,CAACC,SAAjC,CAA2C;AACzCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,CAACE,QAAD,EAAWC,GAAX,EAAgB;AAC5B,SAAKC,wBAAL,CAA8BD,GAA9B;AACD;;AAEFE,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACDd,IAAAA,GAAG,CAACe,KAAJ;AACA;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB;;AAIFN,EAAAA,wBAAwB,CAACD,GAAD,EAAM;AAC5B,UAAMQ,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA1B;AACA,UAAMC,iBAAiB,GAAG,IAAIH,MAAM,CAACC,IAAP,CAAYG,kBAAhB,EAA1B;AACAD,IAAAA,iBAAiB,CAACE,MAAlB,CAAyBd,GAAzB;AAEA,UAAMe,SAAS,GAAG,KAAKnB,KAAL,CAAWoB,IAAX,CAAgBhB,GAAhB,CAAqBiB,IAAD,IAAU;AAC9C,aAAO;AACLC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAEF,IAAI,CAACE,GAAZ;AAAiBC,UAAAA,GAAG,EAAEH,IAAI,CAACG;AAA3B,SADL;AAELC,QAAAA,QAAQ,EAAE;AAFL,OAAP;AAID,KALiB,CAAlB;AAMA,UAAMC,MAAM,GAAGP,SAAS,CAACQ,KAAV,GAAkBL,QAAjC;AACA,UAAMM,WAAW,GAAGT,SAAS,CAACU,GAAV,GAAgBP,QAApC;AAEAV,IAAAA,iBAAiB,CAACkB,KAAlB,CACE;AACEJ,MAAAA,MAAM,EAAEA,MADV;AAEEE,MAAAA,WAAW,EAAEA,WAFf;AAGET,MAAAA,SAAS,EAAEA,SAHb;AAIEY,MAAAA,UAAU,EAAE;AAJd,KADF,EAOE,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACpB,UAAIA,MAAM,KAAK,IAAf,EAAqB;AACnBjB,QAAAA,iBAAiB,CAACkB,aAAlB,CAAgCF,QAAhC;AACD,OAFD,MAEO;AACLG,QAAAA,MAAM,CAACC,KAAP,CAAa,sCAAsCH,MAAnD;AACD;AACF,KAbH;AAeD;;AACCI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKrC,KAAL,CAAWa,MADrB;AAEE,MAAA,SAAS,EAAE,KAFb;AAGE,MAAA,IAAI,EAAE,EAHR;AAIE,MAAA,aAAa,EAAE;AACbU,QAAAA,GAAG,EAAE,OADQ;AAEbC,QAAAA,GAAG,EAAE;AAFQ,OAJjB;AAQE,MAAA,OAAO,EAAE,KAAKvB,cARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAcD;;AAlEwC;;AAqE3C,eAAeL,gBAAgB,CAAC;AAC9B0C,EAAAA,MAAM,EAAE,yCADsB;AAE9BC,EAAAA,SAAS,EAAE;AAFmB,CAAD,CAAhB,CAGZzC,YAHY,CAAf","sourcesContent":["/* global google */\r\nimport React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\r\nimport Head from \"next/head\";\r\nimport \"./config\";\r\nclass MapContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMapReady = this.handleMapReady.bind(this);\r\n  }\r\n\r\n  handleMapReady(mapProps, map) {\r\n    this.calculateAndDisplayRoute(map);\r\n  }\r\n\r\n componentDidUpdate() {\r\n   console.log(places);\r\n  Map.click();\r\n }\r\n\r\n componentDidMount() {\r\n\r\n }\r\n\r\n\r\n\r\ncalculateAndDisplayRoute(map) {\r\n  const directionsService = new google.maps.DirectionsService();\r\n  const directionsDisplay = new google.maps.DirectionsRenderer();\r\n  directionsDisplay.setMap(map);\r\n\r\n  const waypoints = this.props.data.map((item) => {\r\n    return {\r\n      location: { lat: item.lat, lng: item.lng },\r\n      stopover: true,\r\n    };\r\n  });\r\n  const origin = waypoints.shift().location;\r\n  const destination = waypoints.pop().location;\r\n\r\n  directionsService.route(\r\n    {\r\n      origin: origin,\r\n      destination: destination,\r\n      waypoints: waypoints,\r\n      travelMode: \"DRIVING\",\r\n    },\r\n    (response, status) => {\r\n      if (status === \"OK\") {\r\n        directionsDisplay.setDirections(response);\r\n      } else {\r\n        window.alert(\"Directions request failed due to \" + status);\r\n      }\r\n    }\r\n  );\r\n}\r\n  render() {\r\n    return (\r\n      <div className=\"map-container\">\r\n        <Map\r\n          google={this.props.google}\r\n          className={\"map\"}\r\n          zoom={14}\r\n          initialCenter={{\r\n            lat: 14.5995,\r\n            lng: 120.9842,\r\n          }}\r\n          onClick={this.handleMapReady}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\",\r\n  libraries: [],\r\n})(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}