{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*global google*/\nimport React, { Component } from \"react\";\nimport { Polyline } from \"react-google-maps\";\nimport { withGoogleMap, withScriptjs, Marker, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\n\nclass MapWithMarker extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"Map\", ({\n      places,\n      zoom,\n      center\n    }) => {\n      return __jsx(GoogleMap, {\n        defaultZoom: zoom,\n        defaultCenter: center,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, __jsx(Markers, {\n        places: places,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }), __jsx(Polyline, {\n        path: places,\n        options: {\n          strokeColor: \"#FFE900\",\n          strokeOpacity: 2,\n          strokeWeight: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }));\n    });\n\n    this.state = {\n      places: this.props.places\n    }; //initialize initial state from props\n  }\n\n  componentDidMount() {\n    const Markers = ({\n      places\n    }) => {\n      return places.map(place => {\n        return __jsx(Marker, {\n          key: place.id,\n          position: {\n            lat: place.lat,\n            lng: place.lng\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, __jsx(Map, {\n      center: this.props.center,\n      zoom: this.props.zoom,\n      places: this.state.places,\n      containerElement: __jsx(\"div\", {\n        style: {\n          height: `100vh`,\n          width: \"100% \"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }),\n      mapElement: __jsx(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withScriptjs(withGoogleMap(MapWithMarker));","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","Polyline","withGoogleMap","withScriptjs","Marker","GoogleMap","DirectionsRenderer","MapWithMarker","constructor","props","places","zoom","center","strokeColor","strokeOpacity","strokeWeight","state","componentDidMount","Markers","map","place","id","lat","lng","render","height","width"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,kBALF,QAMO,mBANP;;AAYA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AACpCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,iCAKZ,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,IAAV;AAAgBC,MAAAA;AAAhB,KAAD,KAA8B;AACnC,aACE,MAAC,SAAD;AAAW,QAAA,WAAW,EAAED,IAAxB;AAA8B,QAAA,aAAa,EAAEC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,MAAM,EAAEF,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,MAAC,QAAD;AACE,QAAA,IAAI,EAAEA,MADR;AAEE,QAAA,OAAO,EAAE;AACPG,UAAAA,WAAW,EAAE,SADN;AAEPC,UAAAA,aAAa,EAAE,CAFR;AAGPC,UAAAA,YAAY,EAAE;AAHP,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAcD,KApBkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEN,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAArB,KAAb,CAFiB,CAE2B;AAC7C;;AAoBDO,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,OAAO,GAAG,CAAC;AAAER,MAAAA;AAAF,KAAD,KAAgB;AAC9B,aAAOA,MAAM,CAACS,GAAP,CAAYC,KAAD,IAAW;AAC3B,eACE,MAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAnB;AAAuB,UAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAEF,KAAK,CAACE,GAAb;AAAkBC,YAAAA,GAAG,EAAEH,KAAK,CAACG;AAA7B,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJM,CAAP;AAKD,KAND;AAOD;;AAGDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWG,MADrB;AAEE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWE,IAFnB;AAGE,MAAA,MAAM,EAAE,KAAKK,KAAL,CAAWN,MAHrB;AAIE,MAAA,gBAAgB,EAAE;AAAK,QAAA,KAAK,EAAE;AAAEe,UAAAA,MAAM,EAAG,OAAX;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJpB;AAKE,MAAA,UAAU,EAAE;AAAK,QAAA,KAAK,EAAE;AAAED,UAAAA,MAAM,EAAG;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD;;AA/CmC;;AAkDtC,eAAetB,YAAY,CAACD,aAAa,CAACK,aAAD,CAAd,CAA3B","sourcesContent":["/*global google*/\r\nimport React, { Component } from \"react\";\r\nimport { Polyline } from \"react-google-maps\";\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  GoogleMap,\r\n  DirectionsRenderer,\r\n} from \"react-google-maps\";\r\n\r\n\r\n\r\n\r\n\r\nclass MapWithMarker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { places: this.props.places }; //initialize initial state from props\r\n  }\r\n\r\n   Map = ({ places, zoom, center }) => {\r\n    return (\r\n      <GoogleMap defaultZoom={zoom} defaultCenter={center}>\r\n        <Markers places={places} />\r\n  \r\n        <Polyline\r\n          path={places}\r\n          options={{\r\n            strokeColor: \"#FFE900\",\r\n            strokeOpacity: 2,\r\n            strokeWeight: 3,\r\n          }}\r\n        />\r\n      </GoogleMap>\r\n    );\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    const Markers = ({ places }) => {\r\n      return places.map((place) => {\r\n        return (\r\n          <Marker key={place.id} position={{ lat: place.lat, lng: place.lng }} />\r\n        );\r\n      });\r\n    };\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map\r\n          center={this.props.center}\r\n          zoom={this.props.zoom}\r\n          places={this.state.places}\r\n          containerElement={<div style={{ height: `100vh`, width: \"100% \" }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withScriptjs(withGoogleMap(MapWithMarker));\r\n"]},"metadata":{},"sourceType":"module"}