{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\deliver.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport \"../component/map/config\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nexport default function App() {\n  function clickSubmit() {\n    global.config.place.deliver.pickoff = address;\n    global.config.place.deliver.dropoff = addressDrop;\n    global.config.place.deliver.pickofflat = coordinates.lat;\n    global.config.place.deliver.pickofflang = coordinates.lng;\n    global.config.place.deliver.dropofflat = coordinatesDrop.lat;\n    global.config.place.deliver.dropofflang = coordinatesDrop.lng;\n  }\n\n  return __jsx(\"div\", {\n    className: \"col-lg-6 colDeliver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: \"pTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Book your delivery now!\"), __jsx(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(PlacesAutocomplete, {\n    value: addressDrop,\n    onChange: setAddressDrop,\n    onSelect: handleSelectDrop,\n    searchOptions: searchOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", _extends({}, getInputProps({\n    placeholder: \"drop-off\",\n    className: \"location-search-input\"\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"autocomplete-dropdown-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, loading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, \"Loading...\"), suggestions.map(suggestion => {\n    const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n    const style = suggestion.active ? {\n      backgroundColor: \"#fafafa\",\n      cursor: \"pointer\"\n    } : {\n      backgroundColor: \"#ffffff\",\n      cursor: \"pointer\"\n    };\n    return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n      className: \"input-suggestion\",\n      style\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, suggestion.description));\n  }))))), __jsx(Link, {\n    href: \"/backup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"button\",\n    className: \"btnSubmit\",\n    value: \"SUBMIT\",\n    onClick: clickSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/deliver.js"],"names":["React","Link","PlacesAutocomplete","geocodeByAddress","getLatLng","App","clickSubmit","global","config","place","deliver","pickoff","address","dropoff","addressDrop","pickofflat","coordinates","lat","pickofflang","lng","dropofflat","coordinatesDrop","dropofflang","setAddressDrop","handleSelectDrop","searchOptions","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,yBAAP;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;AAKA,eAAe,SAASC,GAAT,GAAe;AAC5B,WAASC,WAAT,GAAuB;AACrBC,IAAAA,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BC,OAA5B,GAAsCC,OAAtC;AACAL,IAAAA,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BG,OAA5B,GAAsCC,WAAtC;AAEAP,IAAAA,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BK,UAA5B,GAAyCC,WAAW,CAACC,GAArD;AACAV,IAAAA,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BQ,WAA5B,GAA0CF,WAAW,CAACG,GAAtD;AAEAZ,IAAAA,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BU,UAA5B,GAAyCC,eAAe,CAACJ,GAAzD;AACAV,IAAAA,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BY,WAA5B,GAA0CD,eAAe,CAACF,GAA1D;AACD;;AAKD,SACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,kBAAD;AACE,IAAA,KAAK,EAAEL,WADT;AAEE,IAAA,QAAQ,EAAES,cAFZ;AAGE,IAAA,QAAQ,EAAEC,gBAHZ;AAIE,IAAA,aAAa,EAAEC,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAAC;AACAC,IAAAA,aADA;AAEAC,IAAAA,WAFA;AAGAC,IAAAA,sBAHA;AAIAC,IAAAA;AAJA,GAAD,KAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACMH,aAAa,CAAC;AAChBI,IAAAA,WAAW,EAAE,UADG;AAEhBC,IAAAA,SAAS,EAAE;AAFK,GAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAQE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAEGF,WAAW,CAACK,GAAZ,CAAiBC,UAAD,IAAgB;AAC/B,UAAMF,SAAS,GAAGE,UAAU,CAACC,MAAX,GACd,yBADc,GAEd,iBAFJ,CAD+B,CAI/B;;AACA,UAAMC,KAAK,GAAGF,UAAU,CAACC,MAAX,GACV;AACEE,MAAAA,eAAe,EAAE,SADnB;AAEEC,MAAAA,MAAM,EAAE;AAFV,KADU,GAKV;AACED,MAAAA,eAAe,EAAE,SADnB;AAEEC,MAAAA,MAAM,EAAE;AAFV,KALJ;AASA,WACE,0BACMT,sBAAsB,CAACK,UAAD,EAAa;AACrCF,MAAAA,SAAS,EAAE,kBAD0B;AAErCI,MAAAA;AAFqC,KAAb,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,UAAU,CAACK,WAAlB,CANF,CADF;AAUD,GAxBA,CAFH,CARF,CAZJ,CAFF,CAFF,EAwDE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,OAAO,EAAEhC,WAAW,EAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxDF,CADF;AAmED","sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport \"../component/map/config\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nexport default function App() {\r\n  function clickSubmit() {\r\n    global.config.place.deliver.pickoff = address;\r\n    global.config.place.deliver.dropoff = addressDrop;\r\n\r\n    global.config.place.deliver.pickofflat = coordinates.lat;\r\n    global.config.place.deliver.pickofflang = coordinates.lng;\r\n\r\n    global.config.place.deliver.dropofflat = coordinatesDrop.lat; \r\n    global.config.place.deliver.dropofflang = coordinatesDrop.lng;\r\n  }\r\n\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"col-lg-6 colDeliver\">\r\n      <p className=\"pTitle\">Book your delivery now!</p>\r\n      <div className=\"box\">\r\n        \r\n        <PlacesAutocomplete\r\n          value={addressDrop}\r\n          onChange={setAddressDrop}\r\n          onSelect={handleSelectDrop}\r\n          searchOptions={searchOptions}\r\n        >\r\n          {({\r\n            getInputProps,\r\n            suggestions,\r\n            getSuggestionItemProps,\r\n            loading,\r\n          }) => (\r\n            <div>\r\n              <input\r\n                {...getInputProps({\r\n                  placeholder: \"drop-off\",\r\n                  className: \"location-search-input\",\r\n                })}\r\n              />\r\n\r\n              <div className=\"autocomplete-dropdown-container\">\r\n                {loading && <div>Loading...</div>}\r\n                {suggestions.map((suggestion) => {\r\n                  const className = suggestion.active\r\n                    ? \"suggestion-item--active\"\r\n                    : \"suggestion-item\";\r\n                  // inline style for demonstration purpose\r\n                  const style = suggestion.active\r\n                    ? {\r\n                        backgroundColor: \"#fafafa\",\r\n                        cursor: \"pointer\",\r\n                      }\r\n                    : {\r\n                        backgroundColor: \"#ffffff\",\r\n                        cursor: \"pointer\",\r\n                      };\r\n                  return (\r\n                    <div\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className: \"input-suggestion\",\r\n                        style,\r\n                      })}\r\n                    >\r\n                      <span>{suggestion.description}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </PlacesAutocomplete>\r\n      </div>\r\n      <Link href=\"/backup\">\r\n        <input\r\n          type=\"button\"\r\n          className=\"btnSubmit\"\r\n          value=\"SUBMIT\"\r\n          onClick={clickSubmit()}\r\n        ></input>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}