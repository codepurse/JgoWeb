{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\leafletmap.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport { Map, TileLayer, Popup, Marker, withLeaflet } from \"react-leaflet\";\nimport \"./config\";\nimport Geocode from \"react-geocode\";\nimport { geocodeByAddress } from \"react-google-places-autocomplete\";\n\nconst MyMarker = props => {\n  const initMarker = ref => {\n    if (ref) {\n      ref.leafletElement.openPopup();\n    }\n  };\n\n  return __jsx(Marker, _extends({\n    ref: initMarker\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }));\n};\n\nclass MapExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPos: null,\n      key: 1,\n      address: \"\"\n    };\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    setTimeout(() => this.myRef.current.leafletElement.invalidateSize(), 100);\n  }\n\n  handleClick(e) {\n    console.log(e.latlng.lat);\n    console.log(e.latlng.lng);\n    Geocode.setApiKey(\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\");\n    Geocode.fromLatLng(e.latlng.lat, e.latlng.lng).then(response => {\n      const address = response.results[0].formatted_address;\n      console.log(address);\n      global.config.place.deliver.pickoff = address;\n      global.config.place.deliver.pickofflat = e.latlng.lat;\n      global.config.place.deliver.dropofflang = e.latlng.lng;\n      this.setState({\n        address: address\n      });\n    }, error => {\n      console.error(error);\n    });\n    this.setState({\n      currentPos: e.latlng\n    });\n  }\n\n  render() {\n    return __jsx(Map, {\n      ref: this.myRef,\n      className: \"map\",\n      center: this.props.center,\n      zoom: this.props.zoom,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, __jsx(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), this.state.currentPos && __jsx(MyMarker, {\n      position: this.state.currentPos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, __jsx(Popup, {\n      position: this.state.currentPos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Current location: \", __jsx(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, this.state.address))));\n  }\n\n}\n\nexport default MapExample;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/leafletmap.js"],"names":["React","Component","Map","TileLayer","Popup","Marker","withLeaflet","Geocode","geocodeByAddress","MyMarker","props","initMarker","ref","leafletElement","openPopup","MapExample","constructor","state","currentPos","key","address","myRef","createRef","handleClick","bind","componentDidUpdate","componentDidMount","setTimeout","current","invalidateSize","e","console","log","latlng","lat","lng","setApiKey","fromLatLng","then","response","results","formatted_address","global","config","place","deliver","pickoff","pickofflat","dropofflang","setState","error","render","center","zoom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Map, TileLayer, Popup, Marker, withLeaflet } from \"react-leaflet\";\r\nimport \"./config\";\r\nimport Geocode from \"react-geocode\";\r\nimport { geocodeByAddress } from \"react-google-places-autocomplete\";\r\n\r\nconst MyMarker = (props) => {\r\n  const initMarker = (ref) => {\r\n    if (ref) {\r\n      ref.leafletElement.openPopup();\r\n    }\r\n  };\r\n\r\n  return <Marker ref={initMarker} {...props} />;\r\n};\r\n\r\nclass MapExample extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPos: null,\r\n      key: 1,\r\n      address: \"\",\r\n    };\r\n    this.myRef = React.createRef();\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n  componentDidMount() {\r\n      setTimeout(\r\n        () =>  this.myRef.current.leafletElement.invalidateSize(), \r\n        100\r\n      );\r\n  }\r\n\r\n  handleClick(e) {\r\n    console.log(e.latlng.lat);\r\n    console.log(e.latlng.lng);\r\n    Geocode.setApiKey(\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\");\r\n\r\n    Geocode.fromLatLng(e.latlng.lat, e.latlng.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].formatted_address;\r\n        console.log(address);\r\n        global.config.place.deliver.pickoff = address;\r\n        global.config.place.deliver.pickofflat = e.latlng.lat;\r\n        global.config.place.deliver.dropofflang = e.latlng.lng;\r\n        this.setState({ address: address });\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n    this.setState({ currentPos: e.latlng });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        ref={this.myRef}\r\n        className=\"map\"\r\n        center={this.props.center}\r\n        zoom={this.props.zoom}\r\n        onClick={this.handleClick}\r\n      >\r\n        <TileLayer    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url='https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png'\r\n        />\r\n        {this.state.currentPos && (\r\n          <MyMarker position={this.state.currentPos}>\r\n            <Popup position={this.state.currentPos}>\r\n              Current location: <pre>{this.state.address}</pre>\r\n            </Popup>\r\n          </MyMarker>\r\n        )}\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapExample;\r\n"]},"metadata":{},"sourceType":"module"}