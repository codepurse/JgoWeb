{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\custommap.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport Head from \"next/head\";\n\nclass MapExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPos: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({\n      currentPos: e.latlng\n    });\n  }\n\n  render() {\n    const MyMarker = props => {\n      const initMarker = ref => {\n        if (ref) {\n          ref.leafletElement.openPopup();\n        }\n      };\n\n      return __jsx(Marker, _extends({\n        ref: initMarker\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }\n      }));\n    };\n\n    if (false) {\n      var {\n        Map,\n        Marker,\n        Popup,\n        TileLayer\n      } = require(\"react-leaflet\");\n\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://unpkg.com/leaflet@1.4.0/dist/leaflet.css\",\n        integrity: \"sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==\",\n        crossorigin: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }), __jsx(\"script\", {\n        src: \"https://unpkg.com/leaflet@1.4.0/dist/leaflet.js\",\n        integrity: \"sha512-QVftwZFqvtRNi0ZyCtsznlKSWOStnDORoefr1enyq5mVL4tmKB3S/EnC3rRJcxCPavG10IcrVGSmPh6Qw5lwrg==\",\n        crossorigin: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, __jsx(Map, {\n        center: this.props.center,\n        zoom: this.props.zoom,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, __jsx(TileLayer, {\n        url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }), this.state.currentPos && __jsx(MyMarker, {\n        position: this.state.currentPos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, __jsx(Popup, {\n        position: this.state.currentPos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, \"Current location:\", \" \", __jsx(\"pre\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, JSON.stringify(this.state.currentPos, null, 2)))))));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, \"not working\"));\n    }\n  }\n\n}\n\nexport default MapExample;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/custommap.js"],"names":["React","Component","Head","MapExample","constructor","props","state","currentPos","handleClick","bind","e","setState","latlng","render","MyMarker","initMarker","ref","leafletElement","openPopup","Map","Marker","Popup","TileLayer","require","center","zoom","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAGjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,CAAD,EAAI;AACb,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,UAAU,EAAEG,CAAC,CAACE;AAAhB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,UAAMC,QAAQ,GAAIT,KAAD,IAAW;AACxB,YAAMU,UAAU,GAAIC,GAAD,IAAS;AAC1B,YAAIA,GAAJ,EAAS;AACPA,UAAAA,GAAG,CAACC,cAAJ,CAAmBC,SAAnB;AACD;AACF,OAJD;;AAMA,aAAO,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAEH;AAAb,SAA6BV,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KARH;;AAWA,eAAqB;AACnB,UAAI;AAAEc,QAAAA,GAAF;AAAOC,QAAAA,MAAP;AAAeC,QAAAA,KAAf;AAAsBC,QAAAA;AAAtB,UAAoCC,OAAO,CAAC,eAAD,CAA/C;;AACA,aACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAC,YADN;AAEE,QAAA,IAAI,EAAC,kDAFP;AAGE,QAAA,SAAS,EAAC,iGAHZ;AAIE,QAAA,WAAW,EAAC,EAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AACE,QAAA,GAAG,EAAC,iDADN;AAEE,QAAA,SAAS,EAAC,iGAFZ;AAGE,QAAA,WAAW,EAAC,EAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AACE,QAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWmB,MADrB;AAEE,QAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,IAFnB;AAGE,QAAA,OAAO,EAAE,KAAKjB,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,SAAD;AAAW,QAAA,GAAG,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAMG,KAAKF,KAAL,CAAWC,UAAX,IACC,MAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACoB,GADpB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMmB,IAAI,CAACC,SAAL,CAAe,KAAKrB,KAAL,CAAWC,UAA1B,EAAsC,IAAtC,EAA4C,CAA5C,CAAN,CAFF,CADF,CAPJ,CADF,CAfF,CADF;AAmCD,KArCD,MAqCO;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAKD;AACF;;AAxEgC;;AA2EnC,eAAeJ,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Head from \"next/head\";\r\n\r\n\r\nclass MapExample extends Component {\r\n\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPos: null,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    this.setState({ currentPos: e.latlng });\r\n  }\r\n\r\n  render() {\r\n\r\n    const MyMarker = (props) => {\r\n        const initMarker = (ref) => {\r\n          if (ref) {\r\n            ref.leafletElement.openPopup();\r\n          }\r\n        };\r\n      \r\n        return <Marker ref={initMarker} {...props} />;\r\n      };\r\n      \r\n\r\n    if (process.browser) {\r\n      var { Map, Marker, Popup, TileLayer } = require(\"react-leaflet\");\r\n      return (\r\n        <>\r\n          <Head>\r\n            <link\r\n              rel=\"stylesheet\"\r\n              href=\"https://unpkg.com/leaflet@1.4.0/dist/leaflet.css\"\r\n              integrity=\"sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==\"\r\n              crossorigin=\"\"\r\n            />\r\n\r\n            <script\r\n              src=\"https://unpkg.com/leaflet@1.4.0/dist/leaflet.js\"\r\n              integrity=\"sha512-QVftwZFqvtRNi0ZyCtsznlKSWOStnDORoefr1enyq5mVL4tmKB3S/EnC3rRJcxCPavG10IcrVGSmPh6Qw5lwrg==\"\r\n              crossorigin=\"\"\r\n            ></script>\r\n          </Head>\r\n          <div>\r\n            <Map\r\n              center={this.props.center}\r\n              zoom={this.props.zoom}\r\n              onClick={this.handleClick}\r\n            >\r\n              <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\r\n              {this.state.currentPos && (\r\n                <MyMarker position={this.state.currentPos}>\r\n                  <Popup position={this.state.currentPos}>\r\n                    Current location:{\" \"}\r\n                    <pre>{JSON.stringify(this.state.currentPos, null, 2)}</pre>\r\n                  </Popup>\r\n                </MyMarker>\r\n              )}\r\n            </Map>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n          <div>\r\n              <p>not working</p>\r\n          </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default MapExample;\r\n"]},"metadata":{},"sourceType":"module"}