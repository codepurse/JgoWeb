{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\pages\\\\custommap.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nexport var MainMap = /*#__PURE__*/function (_Component) {\n  _inherits(MainMap, _Component);\n\n  var _super = _createSuper(MainMap);\n\n  function MainMap() {\n    var _this;\n\n    _classCallCheck(this, MainMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"addMarker\", function (location, map) {\n      _this.setState(function (prev) {\n        return {\n          fields: _objectSpread(_objectSpread({}, prev.fields), {}, {\n            location: location\n          })\n        };\n      });\n\n      map.panTo(location);\n    });\n\n    return _this;\n  }\n\n  _createClass(MainMap, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$this$getcurren, lat, lng;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.getcurrentLocation();\n\n              case 2:\n                _yield$this$getcurren = _context.sent;\n                lat = _yield$this$getcurren.lat;\n                lng = _yield$this$getcurren.lng;\n                this.setState(function (prev) {\n                  return {\n                    fields: _objectSpread(_objectSpread({}, prev.fields), {}, {\n                      location: {\n                        lat: lat,\n                        lng: lng\n                      }\n                    }),\n                    currentLocation: {\n                      lat: lat,\n                      lng: lng\n                    }\n                  };\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getcurrentLocation\",\n    value: function getcurrentLocation() {\n      if (navigator && navigator.geolocation) {\n        return new Promise(function (resolve, reject) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n            resolve({\n              lat: coords.latitude,\n              lng: coords.longitude\n            });\n          });\n        });\n      }\n\n      return {\n        lat: 0,\n        lng: 0\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, __jsx(Map, {\n        google: this.props.google,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        initialCenter: this.state.fields.location,\n        center: this.state.fields.location,\n        zoom: 14,\n        onClick: function onClick(t, map, c) {\n          return _this2.addMarker(c.latLng, map);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, __jsx(Marker, {\n        position: this.state.fields.location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return MainMap;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\"\n})(MainMap);","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/pages/custommap.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","MainMap","location","map","setState","prev","fields","panTo","getcurrentLocation","lat","lng","currentLocation","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","pos","coords","latitude","longitude","props","google","width","height","state","t","c","addMarker","latLng","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\n\r\nexport class MainMap extends Component {\r\n  async componentDidMount() {\r\n    const { lat, lng } = await this.getcurrentLocation();\r\n    this.setState((prev) => ({\r\n      fields: {\r\n        ...prev.fields,\r\n        location: {\r\n          lat,\r\n          lng,\r\n        },\r\n      },\r\n      currentLocation: {\r\n        lat,\r\n        lng,\r\n      },\r\n    }));\r\n  }\r\n\r\n  getcurrentLocation() {\r\n    if (navigator && navigator.geolocation) {\r\n      return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n          const coords = pos.coords;\r\n          resolve({\r\n            lat: coords.latitude,\r\n            lng: coords.longitude,\r\n          });\r\n        });\r\n      });\r\n    }\r\n    return {\r\n      lat: 0,\r\n      lng: 0,\r\n    };\r\n  }\r\n  addMarker = (location, map) => {\r\n    this.setState((prev) => ({\r\n      fields: {\r\n        ...prev.fields,\r\n        location,\r\n      },\r\n    }));\r\n    map.panTo(location);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map\r\n          google={this.props.google}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n          initialCenter={this.state.fields.location}\r\n          center={this.state.fields.location}\r\n          zoom={14}\r\n          onClick={(t, map, c) => this.addMarker(c.latLng, map)}\r\n        >\r\n          <Marker position={this.state.fields.location} />\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\",\r\n})(MainMap);\r\n"]},"metadata":{},"sourceType":"module"}