{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*global google*/\nimport React, { Component } from \"react\";\nimport { Polyline } from \"react-google-maps\";\nimport { withGoogleMap, withScriptjs, Marker, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\nvar exampleMapStyles = [{\n  featureType: \"administrative\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#444444\"\n  }]\n}, {\n  featureType: \"landscape\",\n  elementType: \"all\",\n  stylers: [{\n    color: \"#f2f2f2\"\n  }]\n}, {\n  featureType: \"poi\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"all\",\n  stylers: [{\n    saturation: -100\n  }, {\n    lightness: 45\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"simplified\"\n  }]\n}, {\n  featureType: \"road.arterial\",\n  elementType: \"labels.icon\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"transit\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"all\",\n  stylers: [{\n    color: \"#46bcec\"\n  }, {\n    visibility: \"on\"\n  }]\n}];\n\nvar MapWithMarker = /*#__PURE__*/function (_Component) {\n  _inherits(MapWithMarker, _Component);\n\n  var _super = _createSuper(MapWithMarker);\n\n  function MapWithMarker(props) {\n    var _this;\n\n    _classCallCheck(this, MapWithMarker);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"Map\", function (_ref) {\n      var places = _ref.places,\n          zoom = _ref.zoom,\n          center = _ref.center;\n      return __jsx(GoogleMap, {\n        defaultZoom: zoom,\n        defaultCenter: center,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, __jsx(Markers, {\n        places: places,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }), __jsx(Polyline, {\n        path: places,\n        options: {\n          strokeColor: \"#FFE900\",\n          strokeOpacity: 2,\n          strokeWeight: 3\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }));\n    });\n\n    _this.state = {\n      places: _this.props.places\n    }; //initialize initial state from props\n\n    return _this;\n  }\n\n  _createClass(MapWithMarker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var Markers = function Markers(_ref2) {\n        var places = _ref2.places;\n        return places.map(function (place) {\n          return __jsx(Marker, {\n            key: place.id,\n            position: {\n              lat: place.lat,\n              lng: place.lng\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }\n          });\n        });\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, __jsx(Map, {\n        options: {\n          styles: exampleMapStyles\n        },\n        center: this.props.center,\n        zoom: this.props.zoom,\n        places: this.state.places,\n        containerElement: __jsx(\"div\", {\n          style: {\n            height: \"100vh\",\n            width: \"100% \"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }\n        }),\n        mapElement: __jsx(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 23\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MapWithMarker;\n}(Component);\n\nexport default _c2 = withScriptjs(_c = withGoogleMap(MapWithMarker));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$withScriptjs\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","Polyline","withGoogleMap","withScriptjs","Marker","GoogleMap","DirectionsRenderer","exampleMapStyles","featureType","elementType","stylers","color","visibility","saturation","lightness","MapWithMarker","props","places","zoom","center","strokeColor","strokeOpacity","strokeWeight","state","Markers","map","place","id","lat","lng","styles","height","width"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React, { Component } from \"react\";\r\nimport { Polyline } from \"react-google-maps\";\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  GoogleMap,\r\n  DirectionsRenderer,\r\n} from \"react-google-maps\";\r\n\r\nconst exampleMapStyles = [\r\n  {\r\n    featureType: \"administrative\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#444444\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#f2f2f2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        saturation: -100,\r\n      },\r\n      {\r\n        lightness: 45,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"simplified\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#46bcec\",\r\n      },\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n\r\n\r\n\r\nclass MapWithMarker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { places: this.props.places }; //initialize initial state from props\r\n  }\r\n\r\n   Map = ({ places, zoom, center }) => {\r\n    return (\r\n      <GoogleMap defaultZoom={zoom} defaultCenter={center}>\r\n        <Markers places={places} />\r\n  \r\n        <Polyline\r\n          path={places}\r\n          options={{\r\n            strokeColor: \"#FFE900\",\r\n            strokeOpacity: 2,\r\n            strokeWeight: 3,\r\n          }}\r\n        />\r\n      </GoogleMap>\r\n    );\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    const Markers = ({ places }) => {\r\n      return places.map((place) => {\r\n        return (\r\n          <Marker key={place.id} position={{ lat: place.lat, lng: place.lng }} />\r\n        );\r\n      });\r\n    };\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map\r\n          options={{\r\n            styles: exampleMapStyles,\r\n          }}\r\n          center={this.props.center}\r\n          zoom={this.props.zoom}\r\n          places={this.state.places}\r\n          containerElement={<div style={{ height: `100vh`, width: \"100% \" }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withScriptjs(withGoogleMap(MapWithMarker));\r\n"]},"metadata":{},"sourceType":"module"}