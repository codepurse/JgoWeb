{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useState, useEffect } from \"react\";\nimport Googlemap from \"../component/map/maploader\";\nimport Header from \"../component/header\";\nimport { useRouter } from \"next/router\";\nimport \"../component/map/config\";\nimport Link from \"next/link\";\nimport GooglePlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-google-places-autocomplete\";\nimport Componentdidmount from \"../component/componentdidmount\";\nimport Leaflet from \"../component/map/leaflet\";\nimport swal from \"@sweetalert/with-react\";\nexport default function map() {\n  const router = useRouter();\n  var places_data = coordinate;\n  var click;\n  {\n    /* Passing localstorage value in pickoff, dropoff and map */\n  }\n\n  if (false) {\n    if (global.config.place.deliver.refresh === \"\") {\n      global.config.place.deliver.pickofflat = localStorage.getItem(\"pickofflat\");\n      global.config.place.deliver.pickofflng = localStorage.getItem(\"pickofflng\");\n      global.config.place.deliver.dropofflng = localStorage.getItem(\"dropofflng\");\n      global.config.place.deliver.dropofflat = localStorage.getItem(\"dropofflat\");\n      const origin = {\n        lat: parseFloat(global.config.place.deliver.pickofflat),\n        lng: parseFloat(global.config.place.deliver.pickofflng),\n        id: \"1\"\n      };\n      coordinate.push(origin);\n      const destination = {\n        lat: parseFloat(global.config.place.deliver.dropofflat),\n        lng: parseFloat(global.config.place.deliver.dropofflng),\n        id: \"2\"\n      };\n      coordinate.push(destination);\n      console.log(coordinate);\n      global.config.place.deliver.refresh = \"1\";\n    }\n  } else {}\n\n  {\n    /* Modal for custom map */\n  }\n\n  function opensweetalert() {\n    swal(__jsx(\"div\", {\n      style: {\n        position: \"relative\",\n        overflow: \"hidden\",\n        borderRadius: \"5px\",\n        width: \"800px\"\n      }\n    }, __jsx(Leaflet, null), __jsx(\"p\", {\n      className: \"pDrag\"\n    }, \"Click the map to set location\"), __jsx(\"button\", {\n      className: \"btnSet\",\n      onClick: setAdd\n    }, \"SET\")));\n  }\n\n  {\n    /* Setting the address of pickoff and dropoff after the page loaded */\n  }\n  useEffect(() => {\n    setAddress({\n      value: localStorage.getItem(\"address\"),\n      label: localStorage.getItem(\"address\")\n    });\n    setAddressDrop({\n      value: localStorage.getItem(\"addressDrop\"),\n      label: localStorage.getItem(\"addressDrop\")\n    });\n  }, []);\n  {\n    /* All array and variables needed */\n  }\n  const {\n    0: address,\n    1: setAddress\n  } = useState(null);\n  const [addressDrop, setAddressDrop] = React.useState(\"\");\n  const [addressDrop1, setAddressDrop1] = React.useState(\"\");\n  const [addressDrop2, setAddressDrop2] = React.useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null\n  });\n  const [coordinatesDrop, setCoordinatesDrop] = React.useState({\n    lat: null,\n    lng: null\n  });\n  const [coordinatesDrop1, setCoordinatesDrop1] = React.useState({\n    lat: null,\n    lng: null\n  });\n  const [coordinatesDrop2, setCoordinatesDrop2] = React.useState({\n    lat: null,\n    lng: null\n  });\n  {\n    /* Pickoff setting and passing data to array and to the component itself */\n  }\n\n  const handleChange = async value => {\n    const results = await geocodeByAddress(value.label);\n    const latLng = await getLatLng(results[0]);\n    var str = value.label;\n    var n = str.includes(\"Metro Manila\");\n\n    if (n === true) {\n      setAddress(value);\n      setCoordinates(latLng);\n\n      try {\n        var objIndex = places_data.findIndex(obj => obj.id == click);\n        places_data[objIndex].lat = latLng.lat, places_data[objIndex].lng = latLng.lng, places_data[objIndex].address = value.label, console.log(coordinate);\n        router.push(\"\");\n      } catch (err) {\n        const destination = {\n          address: value.label,\n          lat: latLng.lat,\n          lng: latLng.lng,\n          id: \"1\"\n        };\n        coordinate.push(destination);\n        console.log(coordinate);\n        router.push(\"\");\n      }\n    } else {\n      swal(__jsx(\"div\", {\n        style: {\n          width: \"450px\",\n          padding: \"10px\"\n        }\n      }, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"div\", {\n        className: \"row align-items-center\",\n        style: {\n          borderLeft: \"3px solid #FFE900\"\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-2\"\n      }, __jsx(\"img\", {\n        src: \"Image/complain.png\",\n        style: {\n          width: \"32px\"\n        }\n      })), __jsx(\"div\", {\n        className: \"col-lg-10\",\n        style: {\n          textAlign: \"left\"\n        }\n      }, __jsx(\"p\", {\n        className: \"pError\"\n      }, \"Warning\"), __jsx(\"p\", {\n        className: \"pErrorSub\"\n      }, \"The entered address is not yet in our service area.\"))))));\n    }\n  };\n\n  {\n    /* Dropoff setting and passing data to array and to the component itself */\n  }\n\n  const handleChangeDrop = async value => {\n    const results = await geocodeByAddress(value.label);\n    const latLng = await getLatLng(results[0]);\n    var str = value.label;\n    var n = str.includes(\"Metro Manila\");\n    setAddressDrop(value);\n    setCoordinatesDrop(latLng);\n\n    try {\n      var objIndex = places_data.findIndex(obj => obj.id == click);\n      places_data[objIndex].lat = latLng.lat, places_data[objIndex].lng = latLng.lng, console.log(coordinate);\n      router.push(\"\");\n    } catch (err) {\n      const destination = {\n        lat: latLng.lat,\n        lng: latLng.lng,\n        id: \"2\"\n      };\n      coordinate.push(destination);\n      router.push(\"\");\n    }\n  };\n\n  {\n    /* Stopoff #1 setting and passing data to array and to the component itself */\n  }\n\n  const handleChangeDrop1 = async value => {\n    const results = await geocodeByAddress(value.label);\n    const latLng = await getLatLng(results[0]);\n    setAddressDrop1(value);\n    setCoordinatesDrop1(latLng);\n\n    try {\n      var objIndex = places_data.findIndex(obj => obj.id == click);\n      places_data[objIndex].lat = latLng.lat, places_data[objIndex].lng = latLng.lng, console.log(coordinate);\n      router.push(\"\");\n    } catch (err) {\n      const destination = {\n        lat: latLng.lat,\n        lng: latLng.lng,\n        id: \"3\"\n      };\n      coordinate.push(destination);\n      router.push(\"\");\n    }\n  };\n\n  {\n    /* Stopoff #2 setting and passing data to array and to the component itself */\n  }\n\n  const handleChangeDrop2 = async value => {\n    const results = await geocodeByAddress(value.label);\n    const latLng = await getLatLng(results[0]);\n    setAddressDrop2(value);\n    setCoordinatesDrop2(latLng);\n\n    try {\n      var objIndex = places_data.findIndex(obj => obj.id == click);\n      places_data[objIndex].lat = latLng.lat, places_data[objIndex].lng = latLng.lng, console.log(coordinate);\n      router.push(\"\");\n    } catch (err) {\n      const destination = {\n        lat: latLng.lat,\n        lng: latLng.lng,\n        id: \"4\"\n      };\n      coordinate.push(destination);\n      router.push(\"\");\n    }\n  };\n\n  {\n    /* Passing name in additional details based on click value */\n  }\n\n  function updateInputValue(evt) {\n    try {\n      var objIndex = places_data.findIndex(obj => obj.id == click);\n      places_data[objIndex].detailsname = evt.target.value, console.log(coordinate);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  {\n    /* Passing number in additional details based on click value */\n  }\n\n  function updateInputValueNumber(evt) {\n    try {\n      var objIndex = places_data.findIndex(obj => obj.id == click);\n      places_data[objIndex].detailsnumber = evt.target.value, console.log(coodinate);\n    } catch (err) {\n      console.log(evt.target.value);\n    }\n  }\n\n  {\n    /* Passing address in additional details based on click value */\n  }\n\n  function updateInputValueAdd(evt) {\n    try {\n      var objIndex = places_data.findIndex(obj => obj.id == click);\n      places_data[objIndex].detailsAdd = evt.target.value, console.log(coordinate);\n    } catch (err) {\n      console.log(evt.target.value);\n    }\n  }\n\n  {\n    /* Passing lat, Lng and geocode of the address in component this function is for the custom map */\n  }\n\n  function setAdd() {\n    if (click === 1) {\n      coordinates.lat = global.config.place.deliver.pickofflat;\n      coordinates.lng = global.config.place.deliver.dropofflang;\n      setAddress({\n        value: global.config.place.deliver.pickoff,\n        label: global.config.place.deliver.pickoff\n      });\n      var objIndex = places_data.findIndex(obj => obj.id == click);\n      places_data[objIndex].lat = coordinates.lat, places_data[objIndex].lng = coordinates.lng, console.log(coordinate);\n      router.push(\"\");\n    } else if (click === 2) {\n      coordinates.lat = global.config.place.deliver.pickofflat;\n      coordinates.lng = global.config.place.deliver.dropofflang;\n      setAddressDrop({\n        value: global.config.place.deliver.pickoff,\n        label: global.config.place.deliver.pickoff\n      });\n      var objIndex = places_data.findIndex(obj => obj.id == click);\n      places_data[objIndex].lat = coordinates.lat, places_data[objIndex].lng = coordinates.lng, console.log(coordinate);\n      router.push(\"\");\n    }\n\n    swal.close();\n  }\n\n  {\n    /* Function to delete index in array */\n  }\n\n  function deleteAdd() {\n    var index = places_data.map(x => {\n      return x.id;\n    }).indexOf(click);\n    places_data.splice(index, 1);\n    console.log(places_data);\n    router.push(\"\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, null), __jsx(\"div\", {\n    className: \"container-fluid conMap\"\n  }, __jsx(Componentdidmount, null), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 colLeft\"\n  }, __jsx(\"div\", {\n    className: \"row align-items-center\",\n    style: {\n      padding: \"40px 0px\"\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-4\"\n  }, __jsx(\"img\", {\n    src: \"Image/logo.png\",\n    className: \"img-fluid imgLogo\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-8\"\n  }, __jsx(\"ul\", {\n    className: \"my-row\"\n  }, __jsx(\"li\", null, \"HOME\"), __jsx(\"li\", null, \"DELIVER\"), __jsx(\"li\", null, \"CONTACT\"), __jsx(\"li\", null, \"LOGIN\")))), __jsx(\"p\", {\n    className: \"pPick\"\n  }, \" \", __jsx(\"img\", {\n    src: \"Image/mapgps.svg\",\n    className: \"img-fluid\",\n    style: {\n      marginRight: \"10px\"\n    }\n  }), \" \", \"Pick Up Location\"), __jsx(\"div\", {\n    onClick: () => click = 1\n  }, __jsx(\"div\", {\n    className: \"form-inline\",\n    style: {\n      width: \"95%\",\n      marginLeft: \"5%\"\n    }\n  }, __jsx(GooglePlacesAutocomplete, {\n    selectProps: {\n      instanceId: \"1\",\n      value: address,\n      onChange: handleChange\n    },\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"ph\"]\n      }\n    }\n  }), __jsx(\"img\", {\n    src: \"Image/google-maps.png\",\n    className: \"img-fluid imgMap\",\n    onClick: opensweetalert\n  })), __jsx(\"div\", {\n    className: \"divHide\"\n  }, __jsx(\"p\", {\n    className: \"pAdd\"\n  }, \"+ Add details\"), __jsx(\"div\", {\n    className: \"divAdd\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"txtName\",\n    onChange: evt => updateInputValue(evt),\n    placeholder: \"Name\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"txtNumber\",\n    onChange: evt => updateInputValueNumber(evt),\n    placeholder: \"Contact Number\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"txtNumber\",\n    onChange: evt => updateInputValueAdd(evt),\n    placeholder: \"Blk/Floor/Unit\"\n  })))))), __jsx(\"p\", {\n    className: \"pPick\",\n    style: {\n      marginTop: \"30px\"\n    }\n  }, \" \", __jsx(\"img\", {\n    src: \"Image/mapgps.svg\",\n    className: \"img-fluid\",\n    style: {\n      marginRight: \"15px\"\n    }\n  }), \"Drop Off Location\"), __jsx(\"div\", {\n    onClick: () => click = 2\n  }, __jsx(\"div\", {\n    className: \"form-inline\",\n    style: {\n      width: \"95%\",\n      marginLeft: \"5%\"\n    }\n  }, __jsx(GooglePlacesAutocomplete, {\n    selectProps: {\n      instanceId: \"2\",\n      value: addressDrop,\n      onChange: handleChangeDrop\n    },\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"ph\"]\n      }\n    }\n  }), __jsx(\"img\", {\n    src: \"Image/google-maps.png\",\n    className: \"img-fluid imgMap\",\n    onClick: opensweetalert\n  })), __jsx(\"div\", {\n    className: \"divHide\"\n  }, __jsx(\"p\", {\n    className: \"pAdd\"\n  }, \"+ Add details\"), __jsx(\"div\", {\n    className: \"divAdd\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: evt => updateInputValue(evt),\n    className: \"txtName\",\n    placeholder: \"Name\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"txtNumber\",\n    onChange: evt => updateInputValueNumber(evt),\n    placeholder: \"Contact Number\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"txtAdd\",\n    onChange: evt => updateInputAdd(evt),\n    placeholder: \"Blk/Floor/Unit\"\n  })))))), __jsx(\"div\", {\n    onClick: () => click = 3,\n    style: {\n      display: \"none\"\n    },\n    className: \"divStopoff1 divStopOff\"\n  }, __jsx(\"p\", {\n    className: \"pPick\",\n    style: {\n      marginTop: \"30px\"\n    }\n  }, \" \", __jsx(\"img\", {\n    src: \"Image/mapgps.svg\",\n    className: \"img-fluid\",\n    style: {\n      marginRight: \"15px\"\n    }\n  }), \"Stop Off Location\"), __jsx(\"div\", {\n    className: \"form-inline\",\n    style: {\n      width: \"95%\",\n      marginLeft: \"5%\"\n    }\n  }, __jsx(GooglePlacesAutocomplete, {\n    selectProps: {\n      instanceId: \"3\",\n      value: addressDrop1,\n      onChange: handleChangeDrop1\n    },\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"ph\"]\n      }\n    }\n  }), __jsx(\"img\", {\n    src: \"Image/google-maps.png\",\n    className: \"img-fluid imgMap\"\n  }), __jsx(\"img\", {\n    src: \"Image/remove.png\",\n    className: \"img-fluid  imgDelete\",\n    onClick: deleteAdd\n  })), __jsx(\"div\", {\n    className: \"divHide\"\n  }, __jsx(\"p\", {\n    className: \"pAdd\"\n  }, \"+ Add details\"), __jsx(\"div\", {\n    className: \"divAdd\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: evt => updateInputValue(evt),\n    className: \"txtName\",\n    placeholder: \"Name\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"txtNumber\",\n    onChange: evt => updateInputValueNumber(evt),\n    placeholder: \"Contact Number\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"txtAdd\",\n    onChange: evt => updateInputAdd(evt),\n    placeholder: \"Blk/Floor/Unit\"\n  })))))), __jsx(\"div\", {\n    onClick: () => click = 4,\n    style: {\n      display: \"none\"\n    },\n    className: \"divStopoff2 divStopOff\"\n  }, __jsx(\"p\", {\n    className: \"pPick\",\n    style: {\n      marginTop: \"30px\"\n    }\n  }, \" \", __jsx(\"img\", {\n    src: \"Image/mapgps.svg\",\n    className: \"img-fluid\",\n    style: {\n      marginRight: \"15px\"\n    }\n  }), \"Stop Off Location\"), __jsx(\"div\", {\n    className: \"form-inline\",\n    style: {\n      width: \"95%\",\n      marginLeft: \"5%\"\n    }\n  }, __jsx(GooglePlacesAutocomplete, {\n    selectProps: {\n      instanceId: \"4\",\n      value: addressDrop2,\n      onChange: handleChangeDrop2\n    },\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"ph\"]\n      }\n    }\n  }), __jsx(\"img\", {\n    src: \"Image/google-maps.png\",\n    className: \"img-fluid imgMap\"\n  }), __jsx(\"img\", {\n    src: \"Image/remove.png\",\n    className: \"img-fluid  imgDelete\",\n    onClick: deleteAdd\n  })), __jsx(\"div\", {\n    className: \"divHide\"\n  }, __jsx(\"p\", {\n    className: \"pAdd\"\n  }, \"+ Add details\"), __jsx(\"div\", {\n    className: \"divAdd\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: evt => updateInputValue(evt),\n    className: \"txtName\",\n    placeholder: \"Name\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"txtNumber\",\n    onChange: evt => updateInputValueNumber(evt),\n    placeholder: \"Contact Number\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"txtAdd\",\n    onChange: evt => updateInputAdd(evt),\n    placeholder: \"Blk/Floor/Unit\"\n  })))))), __jsx(\"button\", {\n    className: \"btnAddStopoff\"\n  }, \"Add Stop-off\"), __jsx(\"p\", {\n    className: \"pNote\"\n  }, \"Note: Delivery only within Metro Manila\"), __jsx(\"div\", {\n    className: \"divCategory\"\n  }, __jsx(\"p\", {\n    className: \"pPick\",\n    style: {\n      fontSize: \"1rem\"\n    }\n  }, \"Category\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"boxCategory align-items-center d-flex justify-content-center\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: \"Image/001-file.svg\",\n    className: \"img-fluid mx-auto d-flex imgCategory\"\n  }), __jsx(\"p\", {\n    className: \"pBoxCategory\"\n  }, \"DOCUMENT\")))), __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"boxCategory align-items-center d-flex justify-content-center\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: \"Image/002-pizza.svg\",\n    className: \"img-fluid mx-auto d-flex imgCategory\"\n  }), __jsx(\"p\", {\n    className: \"pBoxCategory\"\n  }, \"FOOD\")))), __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"boxCategory align-items-center d-flex justify-content-center\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: \"Image/clothing.svg\",\n    className: \"img-fluid mx-auto d-flex imgCategory\"\n  }), __jsx(\"p\", {\n    className: \"pBoxCategory\"\n  }, \"CLOTHING\")))), __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"boxCategory align-items-center d-flex justify-content-center\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: \"Image/medical.svg\",\n    className: \"img-fluid mx-auto d-flex imgCategory\"\n  }), __jsx(\"p\", {\n    className: \"pBoxCategory\"\n  }, \"MEDICAL\")))), __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"boxCategory align-items-center d-flex justify-content-center\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: \"Image/001-file.svg\",\n    className: \"img-fluid mx-auto d-flex imgCategory\"\n  }), __jsx(\"p\", {\n    className: \"pBoxCategory\"\n  }, \"FRAGILE\")))), __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"boxCategory align-items-center d-flex justify-content-center\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: \"Image/other.svg\",\n    className: \"img-fluid mx-auto d-flex imgCategory\"\n  }), __jsx(\"p\", {\n    className: \"pBoxCategory\"\n  }, \"OTHERS\")))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12 col-12\",\n    style: {\n      display: \"none\"\n    }\n  }, __jsx(\"p\", {\n    className: \"pNote\"\n  }, \"Note: MAXIMUM WEIGHT IS 10kg\"))), __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: \"30px\"\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-12\"\n  }, __jsx(\"p\", {\n    className: \"pAdditional\"\n  }, \"Additional Services\")), __jsx(\"div\", {\n    className: \"col-lg-3 p-1\"\n  }, __jsx(\"div\", {\n    className: \"boxAdditional\"\n  }, __jsx(\"p\", {\n    className: \"pAdditonalBox\"\n  }, \"Insulated Box\"))), __jsx(\"div\", {\n    className: \"col-lg-3 p-1\"\n  }, __jsx(\"div\", {\n    className: \"boxAdditional\"\n  }, __jsx(\"p\", {\n    className: \"pAdditonalBox\"\n  }, \"Cash Handling\"))), __jsx(\"div\", {\n    className: \"col-lg-3 p-1\"\n  }, __jsx(\"div\", {\n    className: \"boxAdditional\"\n  }, __jsx(\"p\", {\n    className: \"pAdditonalBox\"\n  }, \"Queueing Service\"))), __jsx(\"div\", {\n    className: \"col-lg-3 p-1\"\n  }, __jsx(\"div\", {\n    className: \"boxAdditional\"\n  }, __jsx(\"p\", {\n    className: \"pAdditonalBox\"\n  }, \"Pabili Service\")))), __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: \"25px\",\n      padding: \"0px\"\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-6\",\n    style: {\n      paddingLeft: \"0px;\"\n    }\n  }, __jsx(\"div\", {\n    className: \"form-inline\"\n  }, __jsx(\"img\", {\n    src: \"Image/mastercard.svg\",\n    className: \"img-fluid\",\n    style: {\n      width: \"50px\"\n    }\n  }), __jsx(\"p\", {\n    className: \"pCardNumber\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModalCenter\"\n  }, \"Mastercard 8278\"))), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"img\", {\n    src: \"Image/instant.svg\",\n    className: \"img-fluid imgInstant\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-12\"\n  }, __jsx(Link, {\n    href: \"\"\n  }, __jsx(\"p\", {\n    className: \"pNext\"\n  }, \"Next >>\")))))), __jsx(\"div\", {\n    className: \"col-lg-6 colMap\"\n  }, __jsx(\"div\", {\n    className: \"divMap fixed-top\"\n  }, __jsx(Googlemap, null))))), __jsx(\"div\", {\n    className: \"modal fade\",\n    id: \"exampleModalCenter\",\n    tabIndex: -1,\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalCenterTitle\",\n    \"aria-hidden\": \"true\"\n  }, __jsx(\"div\", {\n    className: \"modal-dialog modal-dialog-centered\",\n    role: \"document\"\n  }, __jsx(\"div\", {\n    className: \"modal-content\"\n  }, __jsx(\"div\", {\n    className: \"modal-header\"\n  }, __jsx(\"h5\", {\n    className: \"modal-title\",\n    id: \"exampleModalLongTitle\"\n  }, \"Mode of Payment\")), __jsx(\"div\", {\n    className: \"modal-body\"\n  }, __jsx(\"div\", {\n    className: \"form-inline formCard\"\n  }, __jsx(\"img\", {\n    src: \"Image/mastercard.svg\",\n    className: \"img-fluid\",\n    style: {\n      width: \"35px\"\n    }\n  }), __jsx(\"p\", {\n    className: \"pCardNumberModal\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModalCenter\"\n  }, \"Mastercard 8278\")), __jsx(\"div\", {\n    className: \"form-inline formCard\"\n  }, __jsx(\"img\", {\n    src: \"Image/visa.png\",\n    className: \"img-fluid\",\n    style: {\n      width: \"35px\"\n    }\n  }), __jsx(\"p\", {\n    className: \"pCardNumberModal\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModalCenter\"\n  }, \"Visa 8278\")), __jsx(\"div\", {\n    className: \"form-inline formCard\"\n  }, __jsx(\"img\", {\n    src: \"Image/cash.png\",\n    className: \"img-fluid\",\n    style: {\n      width: \"35px\"\n    }\n  }), __jsx(\"p\", {\n    className: \"pCardNumberModal\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModalCenter\"\n  }, \"Cash on delivery\"))), __jsx(\"div\", {\n    className: \"modal-footer\"\n  }, __jsx(\"div\", {\n    className: \"row align-items-center\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"img\", {\n    src: \"Image/instant.svg\",\n    className: \"img-fluid\"\n  })), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, __jsx(\"button\", {\n    className: \"btnBookModal\"\n  }, \"BOOK\"))))))));\n}","map":null,"metadata":{},"sourceType":"module"}