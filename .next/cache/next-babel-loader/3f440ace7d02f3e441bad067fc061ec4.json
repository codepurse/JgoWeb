{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*global google*/\nimport React, { Component } from \"react\";\nimport { Polyline } from \"react-google-maps\";\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\n\nvar Map = /*#__PURE__*/function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      directions: null\n    });\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var directionsService = new google.maps.DirectionsService();\n      var origin = {\n        lat: global.config.place.deliver.pickofflat,\n        lng: global.config.place.deliver.pickofflang\n      };\n      var destination = {\n        lat: global.config.place.deliver.dropofflat,\n        lng: global.config.place.deliver.dropofflang\n      };\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, function (result, status) {\n        if (status === google.maps.DirectionsStatus.OK) {\n          _this2.setState({\n            directions: result\n          });\n        } else {\n          console.error(\"error fetching directions \".concat(result));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var GoogleMapExample = withGoogleMap(function (props) {\n        return __jsx(GoogleMap, {\n          ref: props.onMapLoad,\n          defaultZoom: 5,\n          defaultCenter: {\n            lat: 41.85,\n            lng: -117.65\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }\n        }, __jsx(Polyline, {\n          path: _this3.state.lineCoordinates,\n          geodesic: false,\n          options: {\n            strokeColor: \"#38B44F\",\n            strokeOpacity: 1,\n            strokeWeight: 7\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }));\n      });\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, __jsx(GoogleMapExample, {\n        containerElement: __jsx(\"div\", {\n          style: {\n            height: \"100vh\",\n            width: \"100% \"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }\n        }),\n        mapElement: __jsx(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","Polyline","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","Map","directions","directionsService","google","maps","DirectionsService","origin","lat","global","config","place","deliver","pickofflat","lng","pickofflang","destination","dropofflat","dropofflang","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error","GoogleMapExample","props","onMapLoad","state","lineCoordinates","strokeColor","strokeOpacity","strokeWeight","height","width"],"mappings":";;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,kBAJF,QAKO,mBALP;;IAMMC,G;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,UAAU,EAAE;AADN,K;;;;;;;wCAIY;AAAA;;AAClB,UAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA1B;AAEA,UAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEC,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BC,UADpB;AAEbC,QAAAA,GAAG,EAAEL,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BG;AAFpB,OAAf;AAIA,UAAMC,WAAW,GAAG;AAClBR,QAAAA,GAAG,EAAEC,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BK,UADf;AAElBH,QAAAA,GAAG,EAAEL,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,OAApB,CAA4BM;AAFf,OAApB;AAKAf,MAAAA,iBAAiB,CAACgB,KAAlB,CACE;AACEZ,QAAAA,MAAM,EAAEA,MADV;AAEES,QAAAA,WAAW,EAAEA,WAFf;AAGEI,QAAAA,UAAU,EAAEhB,MAAM,CAACC,IAAP,CAAYgB,UAAZ,CAAuBC;AAHrC,OADF,EAME,UAACC,MAAD,EAASC,MAAT,EAAoB;AAClB,YAAIA,MAAM,KAAKpB,MAAM,CAACC,IAAP,CAAYoB,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C,UAAA,MAAI,CAACC,QAAL,CAAc;AACZzB,YAAAA,UAAU,EAAEqB;AADA,WAAd;AAGD,SAJD,MAIO;AACLK,UAAAA,OAAO,CAACC,KAAR,qCAA2CN,MAA3C;AACD;AACF,OAdH;AAgBD;;;6BAEQ;AAAA;;AACP,UAAMO,gBAAgB,GAAGjC,aAAa,CAAC,UAACkC,KAAD;AAAA,eACrC,MAAC,SAAD;AACE,UAAA,GAAG,EAAEA,KAAK,CAACC,SADb;AAEE,UAAA,WAAW,EAAE,CAFf;AAGE,UAAA,aAAa,EAAE;AAAExB,YAAAA,GAAG,EAAE,KAAP;AAAcM,YAAAA,GAAG,EAAE,CAAC;AAApB,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,MAAC,QAAD;AACE,UAAA,IAAI,EAAE,MAAI,CAACmB,KAAL,CAAWC,eADnB;AAEE,UAAA,QAAQ,EAAE,KAFZ;AAGE,UAAA,OAAO,EAAE;AACPC,YAAAA,WAAW,EAAE,SADN;AAEPC,YAAAA,aAAa,EAAE,CAFR;AAGPC,YAAAA,YAAY,EAAE;AAHP,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADqC;AAAA,OAAD,CAAtC;AAkBA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,gBAAD;AACE,QAAA,gBAAgB,EAAE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,SAAR;AAAmBC,YAAAA,KAAK,EAAE;AAA1B,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADpB;AAEE,QAAA,UAAU,EAAE;AAAK,UAAA,KAAK,EAAE;AAAED,YAAAA,MAAM;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;;EA9De3C,S;;AAiElB,eAAeM,GAAf","sourcesContent":["/*global google*/\r\nimport React, { Component } from \"react\";\r\nimport { Polyline } from \"react-google-maps\";\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  GoogleMap,\r\n  DirectionsRenderer,\r\n} from \"react-google-maps\";\r\nclass Map extends Component {\r\n  state = {\r\n    directions: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const directionsService = new google.maps.DirectionsService();\r\n\r\n    const origin = {\r\n      lat: global.config.place.deliver.pickofflat,\r\n      lng: global.config.place.deliver.pickofflang,\r\n    };\r\n    const destination = {\r\n      lat: global.config.place.deliver.dropofflat,\r\n      lng: global.config.place.deliver.dropofflang,\r\n    };\r\n\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: google.maps.TravelMode.DRIVING,\r\n      },\r\n      (result, status) => {\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          this.setState({\r\n            directions: result,\r\n          });\r\n        } else {\r\n          console.error(`error fetching directions ${result}`);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const GoogleMapExample = withGoogleMap((props) => (\r\n      <GoogleMap\r\n        ref={props.onMapLoad}\r\n        defaultZoom={5}\r\n        defaultCenter={{ lat: 41.85, lng: -117.65 }}\r\n      >\r\n        <Polyline\r\n          path={this.state.lineCoordinates}\r\n          geodesic={false}\r\n          options={{\r\n            strokeColor: \"#38B44F\",\r\n            strokeOpacity: 1,\r\n            strokeWeight: 7,\r\n          }}\r\n        />\r\n      </GoogleMap>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <GoogleMapExample\r\n          containerElement={<div style={{ height: `100vh`, width: \"100% \" }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}