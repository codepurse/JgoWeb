{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/* global google */\nimport React from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, DirectionsRenderer } from \"react-google-maps\";\n\nfunction MapDirectionsRenderer(props) {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      directions = _useState2[0],\n      setDirections = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  useEffect(function () {\n    var places = props.places,\n        travelMode = props.travelMode;\n    var waypoints = places.map(function (p) {\n      return {\n        location: {\n          lat: p.lat,\n          lng: p.lng\n        },\n        stopover: true\n      };\n    });\n    var origin = waypoints.shift().location;\n    var destination = waypoints.pop().location;\n    var directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: travelMode,\n      waypoints: waypoints\n    }, function (result, status) {\n      console.log(result);\n\n      if (status === google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      } else {\n        setError(result);\n      }\n    });\n  });\n\n  if (error) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }, error);\n  }\n\n  return directions && __jsx(DirectionsRenderer, {\n    directions: directions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  });\n}\n\n_s(MapDirectionsRenderer, \"EbZ3rf2k47q8bOIBnVG92TiLXsw=\");\n\n_c = MapDirectionsRenderer;\nexport default MapDirectionsRenderer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapDirectionsRenderer\");","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","withGoogleMap","GoogleMap","withScriptjs","Marker","DirectionsRenderer","MapDirectionsRenderer","props","useState","directions","setDirections","error","setError","useEffect","places","travelMode","waypoints","map","p","location","lat","lng","stopover","origin","shift","destination","pop","directionsService","google","maps","DirectionsService","route","result","status","console","log","DirectionsStatus","OK"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,kBALF,QAMO,mBANP;;AAQA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAAA,kBACAC,QAAQ,CAAC,IAAD,CADR;AAAA;AAAA,MAC7BC,UAD6B;AAAA,MACjBC,aADiB;;AAAA,mBAEVF,QAAQ,CAAC,IAAD,CAFE;AAAA;AAAA,MAE7BG,KAF6B;AAAA,MAEtBC,QAFsB;;AAIpCC,EAAAA,SAAS,CAAC,YAAM;AAAA,QACNC,MADM,GACiBP,KADjB,CACNO,MADM;AAAA,QACEC,UADF,GACiBR,KADjB,CACEQ,UADF;AAGd,QAAMC,SAAS,GAAGF,MAAM,CAACG,GAAP,CAAW,UAAAC,CAAC;AAAA,aAAK;AACjCC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAEF,CAAC,CAACE,GAAT;AAAcC,UAAAA,GAAG,EAAEH,CAAC,CAACG;AAArB,SADuB;AAEjCC,QAAAA,QAAQ,EAAE;AAFuB,OAAL;AAAA,KAAZ,CAAlB;AAIA,QAAMC,MAAM,GAAGP,SAAS,CAACQ,KAAV,GAAkBL,QAAjC;AACA,QAAMM,WAAW,GAAGT,SAAS,CAACU,GAAV,GAAgBP,QAApC;AAEA,QAAMQ,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA1B;AACAH,IAAAA,iBAAiB,CAACI,KAAlB,CACE;AACER,MAAAA,MAAM,EAAEA,MADV;AAEEE,MAAAA,WAAW,EAAEA,WAFf;AAGEV,MAAAA,UAAU,EAAEA,UAHd;AAIEC,MAAAA,SAAS,EAAEA;AAJb,KADF,EAOE,UAACgB,MAAD,EAASC,MAAT,EAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,UAAIC,MAAM,KAAKL,MAAM,CAACC,IAAP,CAAYO,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C3B,QAAAA,aAAa,CAACsB,MAAD,CAAb;AACD,OAFD,MAEO;AACLpB,QAAAA,QAAQ,CAACoB,MAAD,CAAR;AACD;AACF,KAdH;AAgBD,GA3BQ,CAAT;;AA6BA,MAAIrB,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CAAP;AACD;;AACD,SACEF,UAAU,IACR,MAAC,kBAAD;AAAoB,IAAA,UAAU,EAAEA,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAKD;;GAzCQH,qB;;KAAAA,qB;AA0CT,eAAeA,qBAAf","sourcesContent":["/* global google */\r\nimport React from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  DirectionsRenderer,\r\n} from \"react-google-maps\";\r\n\r\nfunction MapDirectionsRenderer(props) {\r\n  const [directions, setDirections] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { places, travelMode } = props;\r\n\r\n    const waypoints = places.map(p => ({\r\n      location: { lat: p.lat, lng: p.lng },\r\n      stopover: true\r\n    }));\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n    const directionsService = new google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: travelMode,\r\n        waypoints: waypoints\r\n      },\r\n      (result, status) => {\r\n        console.log(result)\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          setDirections(result);\r\n        } else {\r\n          setError(result);\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return (\r\n    directions && (\r\n      <DirectionsRenderer directions={directions} />\r\n    )\r\n  );\r\n}\r\nexport default MapDirectionsRenderer;"]},"metadata":{},"sourceType":"module"}