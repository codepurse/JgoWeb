{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport \"../component/map/config\";\nimport Geocode from \"react-geocode\";\nconst defaultMapOptions = {\n  fullscreenControl: false\n};\nconst MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4&libraries=geometry,drawing,places\",\n  loadingElement: __jsx(\"div\", {\n    style: {\n      height: `100%`\n    }\n  }),\n  containerElement: __jsx(\"div\", {\n    style: {\n      height: `500px`\n    }\n  }),\n  mapElement: __jsx(\"div\", {\n    style: {\n      height: `100%`\n    }\n  })\n}), lifecycle({\n  componentWillMount() {\n    Geocode.setApiKey(\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\");\n    const refs = {};\n    this.setState({\n      position: null,\n      onMarkerMounted: ref => {\n        refs.marker = ref;\n      },\n      onPositionChanged: () => {\n        const position = refs.marker.getPosition();\n        console.log(position.lat());\n        Geocode.fromLatLng(position.lat(), position.lng()).then(response => {\n          const address = response.results[0].formatted_address;\n          console.log(address);\n          global.config.place.deliver.pickoff = address;\n          global.config.place.deliver.pickofflat = position.lat();\n          global.config.place.deliver.dropofflang = position.lng();\n        }, error => {\n          console.error(error);\n        });\n      }\n    });\n  }\n\n}), withScriptjs, withGoogleMap)(props => __jsx(GoogleMap, {\n  defaultZoom: 12,\n  defaultCenter: {\n    lat: 14.6091,\n    lng: 121.0223\n  },\n  defaultOptions: {\n    fullscreenControl: false,\n    mapTypeControl: false,\n    scaleControl: false,\n    streetViewControl: false\n  }\n}, props.isMarkerShown && __jsx(Marker, {\n  position: {\n    lat: 14.6091,\n    lng: 121.0223\n  },\n  draggable: true,\n  ref: props.onMarkerMounted,\n  onPositionChanged: props.onPositionChanged\n})));\n\nclass custommap extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isMarkerShown: false\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(MyMapComponent, {\n      isMarkerShown: true\n    }));\n  }\n\n}\n\nexport default custommap;","map":null,"metadata":{},"sourceType":"module"}