{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport \"../component/map/config\";\nimport Geocode from \"react-geocode\";\nvar defaultMapOptions = {\n  fullscreenControl: false\n};\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4&libraries=geometry,drawing,places\",\n  loadingElement: __jsx(\"div\", {\n    style: {\n      height: \"100%\"\n    }\n  }),\n  containerElement: __jsx(\"div\", {\n    style: {\n      height: \"500px\"\n    }\n  }),\n  mapElement: __jsx(\"div\", {\n    style: {\n      height: \"100%\"\n    }\n  })\n}), lifecycle({\n  componentWillMount: function componentWillMount() {\n    Geocode.setApiKey(\"AIzaSyDzzi_VBcf2Oef6LTViLU767UPNHlnIze4\");\n    var refs = {};\n    this.setState({\n      position: null,\n      onMarkerMounted: function onMarkerMounted(ref) {\n        refs.marker = ref;\n      },\n      onPositionChanged: function onPositionChanged() {\n        var position = refs.marker.getPosition();\n        console.log(position.lat());\n        Geocode.fromLatLng(position.lat(), position.lng()).then(function (response) {\n          var address = response.results[0].formatted_address;\n          console.log(address);\n          global.config.place.deliver.pickoff = address;\n          global.config.place.deliver.pickofflat = position.lat();\n          global.config.place.deliver.dropofflang = position.lng();\n        }, function (error) {\n          console.error(error);\n        });\n      }\n    });\n  }\n}), withScriptjs, withGoogleMap)(function (props) {\n  return __jsx(GoogleMap, {\n    defaultZoom: 12,\n    defaultCenter: {\n      lat: 14.6091,\n      lng: 121.0223\n    },\n    defaultOptions: {\n      fullscreenControl: false,\n      mapTypeControl: false,\n      scaleControl: false,\n      streetViewControl: false\n    }\n  }, props.isMarkerShown && __jsx(Marker, {\n    position: {\n      lat: 14.6091,\n      lng: 121.0223\n    },\n    draggable: true,\n    ref: props.onMarkerMounted,\n    onPositionChanged: props.onPositionChanged\n  }));\n});\n\nvar custommap = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(custommap, _React$PureComponent);\n\n  var _super = _createSuper(custommap);\n\n  function custommap() {\n    var _this;\n\n    _classCallCheck(this, custommap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isMarkerShown: false\n    });\n\n    return _this;\n  }\n\n  _createClass(custommap, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(MyMapComponent, {\n        isMarkerShown: true\n      }));\n    }\n  }]);\n\n  return custommap;\n}(React.PureComponent);\n\nexport default custommap;","map":null,"metadata":{},"sourceType":"module"}