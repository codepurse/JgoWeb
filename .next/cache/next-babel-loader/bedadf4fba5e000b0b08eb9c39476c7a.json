{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/* global google */\nimport React, { Component, useState, useEffect } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, DirectionsRenderer, google } from \"react-google-maps\";\n\nfunction Map(props) {\n  _s();\n\n  var places = coordinate;\n\n  var _useState = useState(null),\n      directions = _useState[0],\n      setDirections = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    var places = props.places,\n        travelMode = props.travelMode;\n    var waypoints = places.map(function (p) {\n      return {\n        location: {\n          lat: p.latitude,\n          lng: p.longitude\n        },\n        stopover: true\n      };\n    });\n    var origin = waypoints.shift().location;\n    var destination = waypoints.pop().location;\n    var directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: travelMode,\n      waypoints: waypoints\n    }, function (result, status) {\n      console.log(result);\n\n      if (status === google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      } else {\n        setError(result);\n      }\n    });\n  });\n\n  if (error) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, error);\n  }\n\n  return directions && __jsx(DirectionsRenderer, {\n    directions: directions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  });\n}\n\n_s(Map, \"EbZ3rf2k47q8bOIBnVG92TiLXsw=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","useState","useEffect","withGoogleMap","GoogleMap","withScriptjs","Marker","DirectionsRenderer","google","Map","props","places","coordinate","directions","setDirections","error","setError","travelMode","waypoints","map","p","location","lat","latitude","lng","longitude","stopover","origin","shift","destination","pop","directionsService","maps","DirectionsService","route","result","status","console","log","DirectionsStatus","OK"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,kBALF,EAKsBC,MALtB,QAMO,mBANP;;AASA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,MAAMC,MAAM,GAAGC,UAAf;;AADkB,kBAGkBX,QAAQ,CAAC,IAAD,CAH1B;AAAA,MAGXY,UAHW;AAAA,MAGCC,aAHD;;AAAA,mBAIQb,QAAQ,CAAC,IAAD,CAJhB;AAAA,MAIXc,KAJW;AAAA,MAIJC,QAJI;;AAMlBd,EAAAA,SAAS,CAAC,YAAM;AAAA,QACNS,MADM,GACiBD,KADjB,CACNC,MADM;AAAA,QACEM,UADF,GACiBP,KADjB,CACEO,UADF;AAGd,QAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAP,CAAW,UAAAC,CAAC;AAAA,aAAK;AACjCC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAEF,CAAC,CAACG,QAAT;AAAmBC,UAAAA,GAAG,EAAEJ,CAAC,CAACK;AAA1B,SADuB;AAEjCC,QAAAA,QAAQ,EAAE;AAFuB,OAAL;AAAA,KAAZ,CAAlB;AAIA,QAAMC,MAAM,GAAGT,SAAS,CAACU,KAAV,GAAkBP,QAAjC;AACA,QAAMQ,WAAW,GAAGX,SAAS,CAACY,GAAV,GAAgBT,QAApC;AAEA,QAAMU,iBAAiB,GAAG,IAAIvB,MAAM,CAACwB,IAAP,CAAYC,iBAAhB,EAA1B;AACAF,IAAAA,iBAAiB,CAACG,KAAlB,CACE;AACEP,MAAAA,MAAM,EAAEA,MADV;AAEEE,MAAAA,WAAW,EAAEA,WAFf;AAGEZ,MAAAA,UAAU,EAAEA,UAHd;AAIEC,MAAAA,SAAS,EAAEA;AAJb,KADF,EAOE,UAACiB,MAAD,EAASC,MAAT,EAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,UAAIC,MAAM,KAAK5B,MAAM,CAACwB,IAAP,CAAYO,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C1B,QAAAA,aAAa,CAACqB,MAAD,CAAb;AACD,OAFD,MAEO;AACLnB,QAAAA,QAAQ,CAACmB,MAAD,CAAR;AACD;AACF,KAdH;AAgBD,GA3BQ,CAAT;;AA6BA,MAAIpB,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CAAP;AACD;;AACD,SACEF,UAAU,IACR,MAAC,kBAAD;AAAoB,IAAA,UAAU,EAAEA,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAKD;;GA3CQJ,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["/* global google */\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  DirectionsRenderer, google\r\n} from \"react-google-maps\";\r\n\r\n\r\nfunction Map(props) {\r\n  const places = coordinate;\r\n\r\n  const [directions, setDirections] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { places, travelMode } = props;\r\n\r\n    const waypoints = places.map(p => ({\r\n      location: { lat: p.latitude, lng: p.longitude },\r\n      stopover: true\r\n    }));\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n    const directionsService = new google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: travelMode,\r\n        waypoints: waypoints\r\n      },\r\n      (result, status) => {\r\n        console.log(result)\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          setDirections(result);\r\n        } else {\r\n          setError(result);\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return (\r\n    directions && (\r\n      <DirectionsRenderer directions={directions} />\r\n    )\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}