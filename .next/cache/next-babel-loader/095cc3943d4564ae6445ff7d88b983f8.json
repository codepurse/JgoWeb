{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\deliver.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from \"react\";\nimport Link from \"next/link\";\nimport \"../component/map/config\";\nimport GooglePlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-google-places-autocomplete\";\nimport Custommap from \"../component/custommap\";\nexport default function App() {\n  var click;\n\n  function getAdd() {\n    if (click === 0) {\n      coordinates.lat = global.config.place.deliver.pickofflat;\n      coordinates.lng = global.config.place.deliver.dropofflang;\n      setCustomPick(\"ASdsa\");\n    } else {\n      setAddressDrop(global.config.place.deliver.pickoff);\n      coordinatesDrop.lat = global.config.place.deliver.pickofflat;\n      coordinatesDrop.lng = global.config.place.deliver.dropofflang;\n    }\n  }\n\n  function clickSubmit(e) {\n    const origin = {\n      lat: coordinates.lat,\n      lng: coordinates.lng,\n      id: \"1\"\n    };\n    places.push(origin);\n    const destination = {\n      lat: coordinatesDrop.lat,\n      lng: coordinatesDrop.lng,\n      id: \"2\"\n    };\n    places.push(destination);\n    console.log(places);\n    global.config.place.deliver.pickoff = address.label;\n    global.config.place.deliver.dropoff = addressDrop.label;\n    global.config.place.deliver.pickofflat = coordinatesDrop.lat;\n    global.config.place.deliver.pickofflang = coordinatesDrop.lng;\n    global.config.place.deliver.dropofflat = coordinatesDrop.lat;\n    global.config.place.deliver.dropofflang = coordinatesDrop.lng;\n  }\n\n  const [custom_pickoff, setCustomPick] = React.useState(\"\");\n  const [custom_dropoff, setCustomDrop] = React.useState(\"\");\n  const [address, setAddress] = React.useState(\"\");\n  const [addressDrop, setAddressDrop] = React.useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null\n  });\n  const [coordinatesDrop, setCoordinatesDrop] = React.useState({\n    lat: null,\n    lng: null\n  });\n\n  const handleChange = async value => {\n    const results = await geocodeByAddress(value.label);\n    const latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCoordinates(latLng);\n  };\n\n  const handleChangeDrop = async value => {\n    const results = await geocodeByAddress(value.label);\n    const latLng = await getLatLng(results[0]);\n    setAddressDrop(value);\n    setCoordinatesDrop(latLng);\n  };\n\n  return __jsx(\"div\", {\n    className: \"col-lg-6 colDeliver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: \"pTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Book your delivery now!\"), __jsx(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"Image/maps.png\",\n    className: \"img-fluid\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModalCenter\",\n    onClick: () => click = 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), __jsx(GooglePlacesAutocomplete, {\n    selectProps: {\n      defaultInputValue: custom_pickoff,\n      value: address,\n      instanceId: \"1\",\n      onChange: handleChange\n    },\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"ph\"]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"Image/maps.png\",\n    className: \"img-fluid\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModalCenter\",\n    onClick: () => click = 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), __jsx(GooglePlacesAutocomplete, {\n    selectProps: {\n      inputValue: addressDrop,\n      instanceId: \"2\",\n      value: addressDrop,\n      onChange: handleChangeDrop\n    },\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"ph\"]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }))), __jsx(Link, {\n    href: \"/map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"button\",\n    className: \"btnSubmit\",\n    value: \"SUBMIT\",\n    onClick: clickSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"modal fade\",\n    id: \"exampleModalCenter\",\n    tabIndex: -1,\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalCenterTitle\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-dialog modal-dialog-centered modal-lg\",\n    role: \"document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, __jsx(Custommap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    onClick: getAdd,\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"set\")))))));\n}","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/deliver.js"],"names":["React","Component","useState","Link","GooglePlacesAutocomplete","geocodeByAddress","getLatLng","Custommap","App","click","getAdd","coordinates","lat","global","config","place","deliver","pickofflat","lng","dropofflang","setCustomPick","setAddressDrop","pickoff","coordinatesDrop","clickSubmit","e","origin","id","places","push","destination","console","log","address","label","dropoff","addressDrop","pickofflang","dropofflat","custom_pickoff","custom_dropoff","setCustomDrop","setAddress","setCoordinates","setCoordinatesDrop","handleChange","value","results","latLng","handleChangeDrop","defaultInputValue","instanceId","onChange","componentRestrictions","country","inputValue"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport \"../component/map/config\";\r\nimport GooglePlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-google-places-autocomplete\";\r\nimport Custommap from \"../component/custommap\";\r\n\r\nexport default function App() {\r\n  var click;\r\n\r\n  function getAdd() {\r\n    if (click === 0) {\r\n     \r\n      coordinates.lat = global.config.place.deliver.pickofflat;\r\n      coordinates.lng = global.config.place.deliver.dropofflang;\r\n      setCustomPick(\"ASdsa\");\r\n    } else {\r\n      setAddressDrop(global.config.place.deliver.pickoff);\r\n      coordinatesDrop.lat = global.config.place.deliver.pickofflat;\r\n      coordinatesDrop.lng = global.config.place.deliver.dropofflang;\r\n    }\r\n  }\r\n\r\n  function clickSubmit(e) {\r\n    const origin = {\r\n      lat: coordinates.lat,\r\n      lng: coordinates.lng,\r\n      id: \"1\",\r\n    };\r\n    places.push(origin);\r\n    const destination = {\r\n      lat: coordinatesDrop.lat,\r\n      lng: coordinatesDrop.lng,\r\n      id: \"2\",\r\n    };\r\n    places.push(destination);\r\n    console.log(places);\r\n\r\n    global.config.place.deliver.pickoff = address.label;\r\n    global.config.place.deliver.dropoff = addressDrop.label;\r\n\r\n    global.config.place.deliver.pickofflat = coordinatesDrop.lat;\r\n    global.config.place.deliver.pickofflang = coordinatesDrop.lng;\r\n\r\n    global.config.place.deliver.dropofflat = coordinatesDrop.lat;\r\n    global.config.place.deliver.dropofflang = coordinatesDrop.lng;\r\n  }\r\n\r\n  const [custom_pickoff, setCustomPick] = React.useState(\"\");\r\n  const [custom_dropoff, setCustomDrop] = React.useState(\"\");\r\n\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [addressDrop, setAddressDrop] = React.useState(\"\");\r\n  const [coordinates, setCoordinates] = React.useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n  const [coordinatesDrop, setCoordinatesDrop] = React.useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n\r\n  \r\n\r\n  const handleChange = async (value) => {\r\n    const results = await geocodeByAddress(value.label);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n  \r\n  };\r\n\r\n  const handleChangeDrop = async (value) => {\r\n    const results = await geocodeByAddress(value.label);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddressDrop(value);\r\n    setCoordinatesDrop(latLng);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-lg-6 colDeliver\">\r\n      <p className=\"pTitle\">Book your delivery now!</p>\r\n      <div className=\"box\">\r\n        <div className=\"form-inline\">\r\n          <img\r\n            src=\"Image/maps.png\"\r\n            className=\"img-fluid\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModalCenter\"\r\n            onClick={() => (click = 0)}\r\n          ></img>\r\n          <GooglePlacesAutocomplete\r\n            selectProps={{\r\n              defaultInputValue: custom_pickoff,\r\n              value: address,\r\n              instanceId: \"1\",\r\n              onChange: handleChange,\r\n            }}\r\n            autocompletionRequest={{\r\n              componentRestrictions: {\r\n                country: [\"ph\"],\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"form-inline\">\r\n          <img\r\n            src=\"Image/maps.png\"\r\n            className=\"img-fluid\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModalCenter\"\r\n            onClick={() => (click = 1)}\r\n          ></img>\r\n          <GooglePlacesAutocomplete\r\n            selectProps={{\r\n              inputValue: addressDrop,\r\n              instanceId: \"2\",\r\n              value: addressDrop,\r\n              onChange: handleChangeDrop,\r\n            }}\r\n            autocompletionRequest={{\r\n              componentRestrictions: {\r\n                country: [\"ph\"],\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Link href=\"/map\">\r\n        <input\r\n          type=\"button\"\r\n          className=\"btnSubmit\"\r\n          value=\"SUBMIT\"\r\n          onClick={clickSubmit}\r\n        ></input>\r\n      </Link>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModalCenter\"\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalCenterTitle\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div\r\n          className=\"modal-dialog modal-dialog-centered modal-lg\"\r\n          role=\"document\"\r\n        >\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-body\">\r\n              <Custommap></Custommap>\r\n              <Link href=\"/\">\r\n                <button onClick={getAdd} data-dismiss=\"modal\">\r\n                  set\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}