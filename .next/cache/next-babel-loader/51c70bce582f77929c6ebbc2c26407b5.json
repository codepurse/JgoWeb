{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Alfon\\\\Documents\\\\Work Projects\\\\Bitbucket\\\\Jgo\\\\component\\\\map\\\\googlemap.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*global google*/\nimport React, { Component } from \"react\";\nimport { Polyline } from \"react-google-maps\";\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\n\nvar Markers = function Markers(_ref) {\n  var places = _ref.places;\n  return places.map(function (place) {\n    return __jsx(Marker, {\n      key: place.id,\n      position: {\n        lat: place.lat,\n        lng: place.lng\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    });\n  });\n};\n\n_c = Markers;\n\nvar Map = function Map(_ref2) {\n  var places = _ref2.places,\n      zoom = _ref2.zoom,\n      center = _ref2.center;\n  return __jsx(GoogleMap, {\n    defaultZoom: zoom,\n    defaultCenter: center,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Markers, {\n    places: places,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c2 = Map;\n\nvar getRandomInRange = function getRandomInRange(from, to, fixed) {\n  return (Math.random() * (to - from) + from).toFixed(fixed) * 1;\n};\n\nvar MapWithMarker = /*#__PURE__*/function (_Component) {\n  _inherits(MapWithMarker, _Component);\n\n  var _super = _createSuper(MapWithMarker);\n\n  function MapWithMarker(props) {\n    var _this2;\n\n    _classCallCheck(this, MapWithMarker);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      places: _this2.props.places\n    }; //initialize initial state from props\n\n    return _this2;\n  }\n\n  _createClass(MapWithMarker, [{\n    key: \"addPlace\",\n    value: function addPlace() {\n      var newPlace = {\n        id: this.state.places.length + 1,\n        lat: getRandomInRange(-30.0, -35.0, 3),\n        lng: getRandomInRange(110.0, 150.0, 3)\n      };\n      this.setState(function (prevState) {\n        return {\n          places: [].concat(_toConsumableArray(prevState.places), [newPlace])\n        };\n      });\n      /*if(this.state.places.length > 10) { \r\n        clearInterval(this.intervalId)\r\n      }*/\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Map, {\n        center: this.props.center,\n        zoom: this.props.zoom,\n        places: this.state.places,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return MapWithMarker;\n}(Component);\n\nexport default MapWithMarker;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Markers\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"sources":["C:/Users/Alfon/Documents/Work Projects/Bitbucket/Jgo/component/map/googlemap.js"],"names":["React","Component","Polyline","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","Markers","places","map","place","id","lat","lng","Map","zoom","center","getRandomInRange","from","to","fixed","Math","random","toFixed","MapWithMarker","props","state","newPlace","length","setState","prevState"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,kBAJF,QAKO,mBALP;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC9B,SAAOA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAW;AAC3B,WACE,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAnB;AAAuB,MAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEF,KAAK,CAACE,GAAb;AAAkBC,QAAAA,GAAG,EAAEH,KAAK,CAACG;AAA7B,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJM,CAAP;AAKD,CAND;;KAAMN,O;;AAQN,IAAMO,GAAG,GAAG,SAANA,GAAM,QAA8B;AAAA,MAA3BN,MAA2B,SAA3BA,MAA2B;AAAA,MAAnBO,IAAmB,SAAnBA,IAAmB;AAAA,MAAbC,MAAa,SAAbA,MAAa;AACxC,SACE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAED,IAAxB;AAA8B,IAAA,aAAa,EAAEC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,MAAM,EAAER,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;MAAMM,G;;AAQN,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,EAAP,EAAWC,KAAX,EAAqB;AAC5C,SAAO,CAACC,IAAI,CAACC,MAAL,MAAiBH,EAAE,GAAGD,IAAtB,IAA8BA,IAA/B,EAAqCK,OAArC,CAA6CH,KAA7C,IAAsD,CAA7D;AACD,CAFD;;IAKMI,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+BAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AAAElB,MAAAA,MAAM,EAAE,OAAKiB,KAAL,CAAWjB;AAArB,KAAb,CAFiB,CAE2B;;AAF3B;AAGlB;;;;+BAEU;AACT,UAAMmB,QAAQ,GAAG;AACfhB,QAAAA,EAAE,EAAE,KAAKe,KAAL,CAAWlB,MAAX,CAAkBoB,MAAlB,GAA2B,CADhB;AAEfhB,QAAAA,GAAG,EAAEK,gBAAgB,CAAC,CAAC,IAAF,EAAQ,CAAC,IAAT,EAAe,CAAf,CAFN;AAGfJ,QAAAA,GAAG,EAAEI,gBAAgB,CAAC,KAAD,EAAQ,KAAR,EAAe,CAAf;AAHN,OAAjB;AAKA,WAAKY,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BtB,UAAAA,MAAM,+BAAMsB,SAAS,CAACtB,MAAhB,IAAwBmB,QAAxB;AADoB,SAAL;AAAA,OAAvB;AAIA;;;AAGD;;;6BAIQ;AACP,aACE,MAAC,GAAD;AACE,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWT,MADrB;AAEE,QAAA,IAAI,EAAE,KAAKS,KAAL,CAAWV,IAFnB;AAGE,QAAA,MAAM,EAAE,KAAKW,KAAL,CAAWlB,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EA/ByBP,S;;AAkC5B,eAAeuB,aAAf","sourcesContent":["/*global google*/\r\nimport React, { Component } from \"react\";\r\nimport { Polyline } from \"react-google-maps\";\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  GoogleMap,\r\n  DirectionsRenderer,\r\n} from \"react-google-maps\";\r\n\r\nconst Markers = ({ places }) => {\r\n  return places.map((place) => {\r\n    return (\r\n      <Marker key={place.id} position={{ lat: place.lat, lng: place.lng }} />\r\n    );\r\n  });\r\n};\r\n\r\nconst Map = ({ places, zoom, center }) => {\r\n  return (\r\n    <GoogleMap defaultZoom={zoom} defaultCenter={center}>\r\n      <Markers places={places} />\r\n    </GoogleMap>\r\n  );\r\n};\r\n\r\nconst getRandomInRange = (from, to, fixed) => {\r\n  return (Math.random() * (to - from) + from).toFixed(fixed) * 1;\r\n};\r\n\r\n\r\nclass MapWithMarker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { places: this.props.places }; //initialize initial state from props\r\n  }\r\n\r\n  addPlace() {\r\n    const newPlace = {\r\n      id: this.state.places.length + 1,\r\n      lat: getRandomInRange(-30.0, -35.0, 3),\r\n      lng: getRandomInRange(110.0, 150.0, 3)\r\n    };\r\n    this.setState(prevState => ({\r\n      places: [...prevState.places, newPlace]\r\n    }));\r\n\r\n    /*if(this.state.places.length > 10) { \r\n      clearInterval(this.intervalId)\r\n    }*/\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        center={this.props.center}\r\n        zoom={this.props.zoom}\r\n        places={this.state.places}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapWithMarker;\r\n"]},"metadata":{},"sourceType":"module"}